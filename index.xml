<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PSQF 6243</title>
    <link>https://psqf6243.brandonlebeau.org/</link>
      <atom:link href="https://psqf6243.brandonlebeau.org/index.xml" rel="self" type="application/rss+xml" />
    <description>PSQF 6243</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 20 Sep 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://psqf6243.brandonlebeau.org/media/blue-balloon.jpg</url>
      <title>PSQF 6243</title>
      <link>https://psqf6243.brandonlebeau.org/</link>
    </image>
    
    <item>
      <title>Review</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/01-review/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/01-review/</guid>
      <description>&lt;h1 id=&#34;review-for-psqf-6243&#34;&gt;Review for PSQF 6243&lt;/h1&gt;
&lt;p&gt;This serves as a non-exhaustive review for the course. These are elements that I assume you have knowledge of prior to starting the course.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Variable vs constant attributes&lt;/li&gt;
&lt;li&gt;Types of variables (ie., nominal, ordinal, integer, ratio)&lt;/li&gt;
&lt;li&gt;Descriptive Statistics (eg., mean, median, standard deviation, variance, percentiles)&lt;/li&gt;
&lt;li&gt;Higher order moments (eg., skewness and kurtosis)&lt;/li&gt;
&lt;li&gt;Exploring/summarizing univariate distributions (eg., histogram or density figure)&lt;/li&gt;
&lt;li&gt;What is a statistical model? Why do we use them?&lt;/li&gt;
&lt;li&gt;Population vs Sample&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;p&gt;Mario Kart 64 world record data:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;variable&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;class&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;track&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Track name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;factor&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Single or three lap record&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;shortcut&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;factor&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Shortcut or non-shortcut record&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;player&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Player’s name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;system_played&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Used system (NTSC or PAL)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;date&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;date&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;World record date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;time_period&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;period&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Time as &lt;code&gt;hms&lt;/code&gt; period&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;time&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Time in seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;record_duration&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Record duration in days&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# load some libraries
library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
## 
## Attaching package: &#39;ggstance&#39;
## 
## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
## 
## Loading required package: scales
## 
## Attaching package: &#39;scales&#39;
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     discard
## 
## The following object is masked from &#39;package:readr&#39;:
## 
##     col_factor
## 
## Loading required package: ggridges
## 
## New to ggformula?  Try the tutorials: 
## 	learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
## 	learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lubridate)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;lubridate&#39;
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     date, intersect, setdiff, union
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mosaic)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &#39;mosaic&#39;:
##   method                           from   
##   fortify.SpatialPolygonsDataFrame ggplot2
## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Attaching package: &#39;mosaic&#39;
## 
## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
## 
## The following object is masked from &#39;package:scales&#39;:
## 
##     rescale
## 
## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     cross
## 
## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
## 
## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,
##     quantile, sd, t.test, var
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(e1071)

theme_set(theme_bw(base_size = 18))

# load in some data
mariokart &amp;lt;- readr::read_csv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-25/records.csv&#39;) %&amp;gt;%
    mutate(year = year(date),
           month = month(date),
           day = month(date))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 2334 Columns: 9
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr  (6): track, type, shortcut, player, system_played, time_period
## dbl  (2): time, record_duration
## date (1): date
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(mariokart)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 × 12
##   track      type  short…¹ player syste…² date       time_…³  time recor…⁴  year
##   &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;   &amp;lt;date&amp;gt;     &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Luigi Rac… Thre… No      Salam  NTSC    1997-02-15 2M 12.…  133.       1  1997
## 2 Luigi Rac… Thre… No      Booth  NTSC    1997-02-16 2M 9.9…  130.       0  1997
## 3 Luigi Rac… Thre… No      Salam  NTSC    1997-02-16 2M 8.9…  129.      12  1997
## 4 Luigi Rac… Thre… No      Salam  NTSC    1997-02-28 2M 6.9…  127.       7  1997
## 5 Luigi Rac… Thre… No      Gregg… NTSC    1997-03-07 2M 4.5…  125.      54  1997
## 6 Luigi Rac… Thre… No      Rocky… NTSC    1997-04-30 2M 2.8…  123.       0  1997
## # … with 2 more variables: month &amp;lt;dbl&amp;gt;, day &amp;lt;dbl&amp;gt;, and abbreviated variable
## #   names ¹​shortcut, ²​system_played, ³​time_period, ⁴​record_duration
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# univariate distribution of time
gf_histogram(~ time, data = mariokart, bins = 30) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_density(~ time, data = mariokart) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df_stats(~ time, data = mariokart, mean, median, sd, skewness, kurtosis, quantile(probs = c(0.1, 0.5, 0.9)))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   response     mean median      sd skewness kurtosis   10%   50%     90%
## 1     time 90.62383  86.19 66.6721 1.771732 3.844745 31.31 86.19 171.961
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;bivariate-association&#34;&gt;Bivariate Association&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cor(time ~ record_duration, data = mariokart)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.06736739
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(time ~ record_duration, data = mariokart) %&amp;gt;%
  gf_labs(x = &amp;quot;How long the record was held&amp;quot;,
          y = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;questions&#34;&gt;Questions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;What is problematic about the analyses above? Why?&lt;/li&gt;
&lt;li&gt;What could be done to improve the analyses above?&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>https://psqf6243.brandonlebeau.org/content/00-getting-started/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/00-getting-started/</guid>
      <description>&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Review the syllabus&lt;/li&gt;
&lt;li&gt;Review the schedule&lt;/li&gt;
&lt;li&gt;Review, accessing the IDAS page
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://psqf-6243-0002.idas.aws.cloud.uiowa.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jupyter Notebooks&lt;/a&gt; version of IDAS&lt;/li&gt;
&lt;li&gt;RStudio Server, to access you can switch via the &amp;ldquo;New&amp;rdquo; button on Jupyter Notebooks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optionally, but strongly encouraged, complete the &lt;a href=&#34;https://forms.office.com/r/40cahs1wma&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;course survey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Review - Class</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/01-review-class/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/01-review-class/</guid>
      <description>&lt;h1 id=&#34;review-for-psqf-6243&#34;&gt;Review for PSQF 6243&lt;/h1&gt;
&lt;p&gt;This serves as a non-exhaustive review for the course. These are elements that I assume you have knowledge of prior to starting the course.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Variable vs constant attributes&lt;/li&gt;
&lt;li&gt;Types of variables (ie., nominal, ordinal, integer, ratio)&lt;/li&gt;
&lt;li&gt;Descriptive Statistics (eg., mean, median, standard deviation, variance, percentiles)&lt;/li&gt;
&lt;li&gt;Higher order moments (eg., skewness and kurtosis)&lt;/li&gt;
&lt;li&gt;Exploring/summarizing univariate distributions (eg., histogram or density figure)&lt;/li&gt;
&lt;li&gt;What is a statistical model? Why do we use them?&lt;/li&gt;
&lt;li&gt;Population vs Sample&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;p&gt;Mario Kart 64 world record data:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;variable&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;class&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;track&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Track name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;factor&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Single or three lap record&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;shortcut&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;factor&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Shortcut or non-shortcut record&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;player&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Player’s name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;system_played&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Used system (NTSC or PAL)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;date&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;date&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;World record date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;time_period&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;period&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Time as &lt;code&gt;hms&lt;/code&gt; period&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;time&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Time in seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;record_duration&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Record duration in days&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# load some libraries
library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
## 
## Attaching package: &#39;ggstance&#39;
## 
## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
## 
## Loading required package: scales
## 
## Attaching package: &#39;scales&#39;
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     discard
## 
## The following object is masked from &#39;package:readr&#39;:
## 
##     col_factor
## 
## Loading required package: ggridges
## 
## New to ggformula?  Try the tutorials: 
## 	learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
## 	learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lubridate)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;lubridate&#39;
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     date, intersect, setdiff, union
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mosaic)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &#39;mosaic&#39;:
##   method                           from   
##   fortify.SpatialPolygonsDataFrame ggplot2
## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Attaching package: &#39;mosaic&#39;
## 
## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
## 
## The following object is masked from &#39;package:scales&#39;:
## 
##     rescale
## 
## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     cross
## 
## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
## 
## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,
##     quantile, sd, t.test, var
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(e1071)

theme_set(theme_bw(base_size = 18))

# load in some data
mariokart &amp;lt;- readr::read_csv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-25/records.csv&#39;) %&amp;gt;%
    mutate(year = year(date),
           month = month(date),
           day = month(date))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 2334 Columns: 9
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr  (6): track, type, shortcut, player, system_played, time_period
## dbl  (2): time, record_duration
## date (1): date
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(mariokart)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 × 12
##   track      type  short…¹ player syste…² date       time_…³  time recor…⁴  year
##   &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;   &amp;lt;date&amp;gt;     &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Luigi Rac… Thre… No      Salam  NTSC    1997-02-15 2M 12.…  133.       1  1997
## 2 Luigi Rac… Thre… No      Booth  NTSC    1997-02-16 2M 9.9…  130.       0  1997
## 3 Luigi Rac… Thre… No      Salam  NTSC    1997-02-16 2M 8.9…  129.      12  1997
## 4 Luigi Rac… Thre… No      Salam  NTSC    1997-02-28 2M 6.9…  127.       7  1997
## 5 Luigi Rac… Thre… No      Gregg… NTSC    1997-03-07 2M 4.5…  125.      54  1997
## 6 Luigi Rac… Thre… No      Rocky… NTSC    1997-04-30 2M 2.8…  123.       0  1997
## # … with 2 more variables: month &amp;lt;dbl&amp;gt;, day &amp;lt;dbl&amp;gt;, and abbreviated variable
## #   names ¹​shortcut, ²​system_played, ³​time_period, ⁴​record_duration
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# univariate distribution of time
gf_histogram(~ time, data = mariokart, bins = 30, color = &#39;black&#39;) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_histogram(~ time, fill = ~ shortcut, data = mariokart, bins = 30, color = &#39;black&#39;) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_density(~ time, data = mariokart) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_density(~ time, color = &#39;black&#39;, fill = ~ shortcut, data = mariokart) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df_stats(~ time, data = mariokart, mean, median, sd, skewness, kurtosis, quantile(probs = c(0.1, 0.5, 0.9)))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   response     mean median      sd skewness kurtosis   10%   50%     90%
## 1     time 90.62383  86.19 66.6721 1.771732 3.844745 31.31 86.19 171.961
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;count(mariokart, track, shortcut)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 28 × 3
##    track                 shortcut     n
##    &amp;lt;chr&amp;gt;                 &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt;
##  1 Banshee Boardwalk     No          83
##  2 Bowser&#39;s Castle       No          69
##  3 Choco Mountain        No          77
##  4 Choco Mountain        Yes         71
##  5 D.K.&#39;s Jungle Parkway No         106
##  6 D.K.&#39;s Jungle Parkway Yes         74
##  7 Frappe Snowland       No          93
##  8 Frappe Snowland       Yes         87
##  9 Kalimari Desert       No         102
## 10 Kalimari Desert       Yes         67
## # … with 18 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mariokart |&amp;gt; 
  filter(track == &#39;Choco Mountain&#39;) |&amp;gt; 
  gf_density(~ time, color = &#39;black&#39;, fill = ~ shortcut, data = mariokart) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;) |&amp;gt;
   gf_facet_wrap(~ type, scale = &#39;free_x&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;count(mariokart, track, system_played)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 × 3
##    track                 system_played     n
##    &amp;lt;chr&amp;gt;                 &amp;lt;chr&amp;gt;         &amp;lt;int&amp;gt;
##  1 Banshee Boardwalk     NTSC             21
##  2 Banshee Boardwalk     PAL              62
##  3 Bowser&#39;s Castle       NTSC             18
##  4 Bowser&#39;s Castle       PAL              51
##  5 Choco Mountain        NTSC             56
##  6 Choco Mountain        PAL              92
##  7 D.K.&#39;s Jungle Parkway NTSC             47
##  8 D.K.&#39;s Jungle Parkway PAL             133
##  9 Frappe Snowland       NTSC             65
## 10 Frappe Snowland       PAL             115
## # … with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mariokart |&amp;gt; 
  filter(track == &#39;Moo Moo Farm&#39;, type == &#39;Single Lap&#39;) |&amp;gt; 
  gf_density(~ time, color = &#39;black&#39;, fill = ~ system_played, data = mariokart) %&amp;gt;% 
   gf_labs(x = &amp;quot;Time (in seconds)&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;count(mariokart, type)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 × 2
##   type           n
##   &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt;
## 1 Single Lap  1123
## 2 Three Lap   1211
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str(mariokart)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tibble [2,334 × 12] (S3: tbl_df/tbl/data.frame)
##  $ track          : chr [1:2334] &amp;quot;Luigi Raceway&amp;quot; &amp;quot;Luigi Raceway&amp;quot; &amp;quot;Luigi Raceway&amp;quot; &amp;quot;Luigi Raceway&amp;quot; ...
##  $ type           : chr [1:2334] &amp;quot;Three Lap&amp;quot; &amp;quot;Three Lap&amp;quot; &amp;quot;Three Lap&amp;quot; &amp;quot;Three Lap&amp;quot; ...
##  $ shortcut       : chr [1:2334] &amp;quot;No&amp;quot; &amp;quot;No&amp;quot; &amp;quot;No&amp;quot; &amp;quot;No&amp;quot; ...
##  $ player         : chr [1:2334] &amp;quot;Salam&amp;quot; &amp;quot;Booth&amp;quot; &amp;quot;Salam&amp;quot; &amp;quot;Salam&amp;quot; ...
##  $ system_played  : chr [1:2334] &amp;quot;NTSC&amp;quot; &amp;quot;NTSC&amp;quot; &amp;quot;NTSC&amp;quot; &amp;quot;NTSC&amp;quot; ...
##  $ date           : Date[1:2334], format: &amp;quot;1997-02-15&amp;quot; &amp;quot;1997-02-16&amp;quot; ...
##  $ time_period    : chr [1:2334] &amp;quot;2M 12.99S&amp;quot; &amp;quot;2M 9.99S&amp;quot; &amp;quot;2M 8.99S&amp;quot; &amp;quot;2M 6.99S&amp;quot; ...
##  $ time           : num [1:2334] 133 130 129 127 125 ...
##  $ record_duration: num [1:2334] 1 0 12 7 54 0 0 27 0 64 ...
##  $ year           : num [1:2334] 1997 1997 1997 1997 1997 ...
##  $ month          : num [1:2334] 2 2 2 2 3 4 4 4 5 5 ...
##  $ day            : num [1:2334] 2 2 2 2 3 4 4 4 5 5 ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;bivariate-association&#34;&gt;Bivariate Association&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cor(time ~ record_duration, data = mariokart) |&amp;gt;
  round(2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.07
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(time ~ record_duration, data = mariokart) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;) |&amp;gt;
  gf_labs(x = &amp;quot;How long the record was held&amp;quot;,
          y = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mariokart %&amp;gt;%
  group_by(track, type, shortcut, system_played) %&amp;gt;%
summarise(correlation = cor(time ~ record_duration),
         num = n()) %&amp;gt;%
arrange(correlation)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &#39;track&#39;, &#39;type&#39;, &#39;shortcut&#39;. You can
## override using the `.groups` argument.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 112 × 6
## # Groups:   track, type, shortcut [56]
##    track                 type       shortcut system_played correlation   num
##    &amp;lt;chr&amp;gt;                 &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
##  1 Rainbow Road          Three Lap  No       NTSC               -1.00      3
##  2 Rainbow Road          Single Lap No       NTSC               -0.914     4
##  3 Rainbow Road          Single Lap Yes      NTSC               -0.914     4
##  4 Sherbet Land          Three Lap  Yes      NTSC               -0.779     5
##  5 Wario Stadium         Three Lap  Yes      PAL                -0.682     7
##  6 Luigi Raceway         Three Lap  Yes      PAL                -0.630     9
##  7 Moo Moo Farm          Single Lap No       NTSC               -0.582    19
##  8 Choco Mountain        Three Lap  No       PAL                -0.527    31
##  9 D.K.&#39;s Jungle Parkway Three Lap  No       NTSC               -0.495     5
## 10 Yoshi Valley          Three Lap  Yes      PAL                -0.469    10
## # … with 102 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mariokart %&amp;gt;%
filter(track == &#39;Mario Raceway&#39;,
       type == &#39;Three Lap&#39;,
       shortcut == &#39;No&#39;,
       system_played == &#39;NTSC&#39;) %&amp;gt;%
       gf_point(time ~ record_duration) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;) |&amp;gt;
  gf_labs(x = &amp;quot;How long the record was held&amp;quot;,
          y = &amp;quot;Time (in seconds)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/01-review-class_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str(mariokart)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tibble [2,334 × 12] (S3: tbl_df/tbl/data.frame)
##  $ track          : chr [1:2334] &amp;quot;Luigi Raceway&amp;quot; &amp;quot;Luigi Raceway&amp;quot; &amp;quot;Luigi Raceway&amp;quot; &amp;quot;Luigi Raceway&amp;quot; ...
##  $ type           : chr [1:2334] &amp;quot;Three Lap&amp;quot; &amp;quot;Three Lap&amp;quot; &amp;quot;Three Lap&amp;quot; &amp;quot;Three Lap&amp;quot; ...
##  $ shortcut       : chr [1:2334] &amp;quot;No&amp;quot; &amp;quot;No&amp;quot; &amp;quot;No&amp;quot; &amp;quot;No&amp;quot; ...
##  $ player         : chr [1:2334] &amp;quot;Salam&amp;quot; &amp;quot;Booth&amp;quot; &amp;quot;Salam&amp;quot; &amp;quot;Salam&amp;quot; ...
##  $ system_played  : chr [1:2334] &amp;quot;NTSC&amp;quot; &amp;quot;NTSC&amp;quot; &amp;quot;NTSC&amp;quot; &amp;quot;NTSC&amp;quot; ...
##  $ date           : Date[1:2334], format: &amp;quot;1997-02-15&amp;quot; &amp;quot;1997-02-16&amp;quot; ...
##  $ time_period    : chr [1:2334] &amp;quot;2M 12.99S&amp;quot; &amp;quot;2M 9.99S&amp;quot; &amp;quot;2M 8.99S&amp;quot; &amp;quot;2M 6.99S&amp;quot; ...
##  $ time           : num [1:2334] 133 130 129 127 125 ...
##  $ record_duration: num [1:2334] 1 0 12 7 54 0 0 27 0 64 ...
##  $ year           : num [1:2334] 1997 1997 1997 1997 1997 ...
##  $ month          : num [1:2334] 2 2 2 2 3 4 4 4 5 5 ...
##  $ day            : num [1:2334] 2 2 2 2 3 4 4 4 5 5 ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;questions&#34;&gt;Questions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;What is problematic about the analyses above? Why?&lt;/li&gt;
&lt;li&gt;What could be done to improve the analyses above?&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>IDAS Introduction</title>
      <link>https://psqf6243.brandonlebeau.org/content/00a-idas/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/00a-idas/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This page is meant as a way to give some introduction and how to access the IDAS used for the course.&lt;/p&gt;
&lt;h2 id=&#34;access&#34;&gt;Access&lt;/h2&gt;
&lt;p&gt;The IDAS server can be accessed via the following link directly: &lt;a href=&#34;http://psqf-6243-0002.idas.aws.cloud.uiowa.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Access IDAS&lt;/a&gt;. Upon going here, you will be prompted to log in with your HawkID. Finally, to use the IDAS, you will need to have DUO authentication activated.&lt;/p&gt;
&lt;p&gt;Here is a good link if you have not set up DUO authentication before from ITS. It may take a few hours or up to a day to be granted access to the IDAS after setting up DUO authentication for the first time, &lt;a href=&#34;https://its.uiowa.edu/duo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DUO Authentication Docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;idas-specifics&#34;&gt;IDAS Specifics&lt;/h2&gt;
&lt;p&gt;The IDAS by default will launch in Jupyter Lab mode and will sync all course materials that I have posted for the course. The syncing of remote materials will never overwrite anything that you have manually edited by you, the student. For this reason, if I notice a breaking change, I usually post a new updated file with a new name.&lt;/p&gt;
&lt;p&gt;You can also access RStudio server within the IDAS for the course as well. This can be accessed by clicking on &amp;ldquo;RStudio&amp;rdquo; from the launcher page. You should still have access to all of the course files that are automatically synced for you within the RStudio environment.&lt;/p&gt;
&lt;h2 id=&#34;shutting-down-idas&#34;&gt;Shutting down IDAS&lt;/h2&gt;
&lt;p&gt;When you are finished working in the IDAS, you should go to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File &amp;gt; Hub Control Panel &amp;gt; Stop My Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This disconnects/stops the server instance so that the resources can be allocated to others wishing to use the service.&lt;/p&gt;
&lt;h2 id=&#34;common-issues&#34;&gt;Common issues&lt;/h2&gt;
&lt;p&gt;ITS has established a &lt;a href=&#34;https://wiki.uiowa.edu/display/hpcdocs/Troubleshooting&amp;#43;Common&amp;#43;Issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wiki page&lt;/a&gt; for common problems that occur and other documentation related to the IDAS.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Linear Regression</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/02-linear-regression/</link>
      <pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/02-linear-regression/</guid>
      <description>&lt;h1 id=&#34;introduction-to-linear-regression&#34;&gt;Introduction to Linear Regression&lt;/h1&gt;
&lt;p&gt;This week will dive into linear regression, the foundation of this course. The exploration into linear regression will first start with the case when we have 2 &lt;strong&gt;continuous&lt;/strong&gt; attributes. One of those attributes will be the &lt;em&gt;outcome&lt;/em&gt; or &lt;em&gt;attribute of interest&lt;/em&gt; whereas the other will used as a &lt;em&gt;predictor&lt;/em&gt;. The outcome or attribute of interest is sometimes referred to as the dependent variable and the predictor is sometimes referred to as the independent variable. One way to think about this is that the dependent variable depends or is a function of the other attributes of interest. In linear regression terms, it could also be said that the independent variable &lt;strong&gt;explains variation&lt;/strong&gt; in the dependent variable (more on this later).&lt;/p&gt;
&lt;p&gt;Of note, variable is a typical word used in statistics, I&amp;rsquo;ve come to like the word &lt;strong&gt;attribute&lt;/strong&gt; instead of variable. I will tend to use attribute, as in, a data attribute, but these are roughly interchangeable in my terminology.&lt;/p&gt;
&lt;p&gt;We may write this general model as:&lt;/p&gt;
&lt;p&gt;$$
Y = \beta_{0} + \beta_{1} X + \epsilon
$$&lt;/p&gt;
&lt;p&gt;Where &lt;code&gt;\(Y\)&lt;/code&gt; is the outcome attribute. It is also known as the dependent variable. The &lt;code&gt;\(X\)&lt;/code&gt; term is the predictor/covariate attribute. It is also known as the independent variable. The &lt;code&gt;\(\epsilon\)&lt;/code&gt; is a random error term, more on this later. Finally, &lt;code&gt;\(\beta_{0}\)&lt;/code&gt; and &lt;code&gt;\(\beta_{1}\)&lt;/code&gt; are unknown population coefficients that we are interested in estimating. More on this later too.&lt;/p&gt;
&lt;h2 id=&#34;specific-example&#34;&gt;Specific example&lt;/h2&gt;
&lt;p&gt;The data used for this section of the course is from the 2019 WNBA season. These data are part of the &lt;a href=&#34;https://www.bayesrulesbook.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;bayesrules&lt;/em&gt; package/book&lt;/a&gt;. The data contain 146 rows, one for each WNBA player sampled, and 32 attributes for that player. The R packages are loaded and the first few rows of the data are shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mosaic)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &#39;mosaic&#39;:
##   method                           from   
##   fortify.SpatialPolygonsDataFrame ggplot2
## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Attaching package: &#39;mosaic&#39;
## 
## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
## 
## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     cross
## 
## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
## 
## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,
##     quantile, sd, t.test, var
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)

basketball &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/basketball.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 146 Columns: 32
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr  (2): player_name, team
## dbl (29): height, weight, year, age, games_played, games_started, avg_minute...
## lgl  (1): starter
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;theme_set(theme_bw(base_size = 18))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(basketball)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 × 32
##   player_name    height weight  year team    age games…¹ games…² avg_m…³ avg_f…⁴
##   &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Natalie Achon…     75    190  2019 IND      26      30      18    21.2     3.3
## 2 Kayla Alexand…     76    195  2019 CHI      28       3       0     6.7     1  
## 3 Rebecca Allen      74    162  2019 NYL      26      24       2    17.2     2.7
## 4 Jillian Alley…     74    193  2019 MIN      24       5       0     2.8     0.4
## 5 Kristine Anig…     76    200  2019 TOT      22      27       0     9.3     0.8
## 6 Kristine Anig…     76    200  2019 CON      22      17       0     7.1     0.6
## # … with 22 more variables: avg_field_goal_attempts &amp;lt;dbl&amp;gt;,
## #   field_goal_pct &amp;lt;dbl&amp;gt;, avg_three_pointers &amp;lt;dbl&amp;gt;,
## #   avg_three_pointer_attempts &amp;lt;dbl&amp;gt;, three_pointer_pct &amp;lt;dbl&amp;gt;,
## #   avg_two_pointers &amp;lt;dbl&amp;gt;, avg_two_pointer_attempts &amp;lt;dbl&amp;gt;,
## #   two_pointer_pct &amp;lt;dbl&amp;gt;, avg_free_throws &amp;lt;dbl&amp;gt;,
## #   avg_free_throw_attempts &amp;lt;dbl&amp;gt;, free_throw_pct &amp;lt;dbl&amp;gt;,
## #   avg_offensive_rb &amp;lt;dbl&amp;gt;, avg_defensive_rb &amp;lt;dbl&amp;gt;, avg_rb &amp;lt;dbl&amp;gt;, …
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;guiding-question&#34;&gt;Guiding Question&lt;/h2&gt;
&lt;p&gt;Suppose we are interested in exploring if players tend to score more points by playing more minutes in the season. That is, those that play more may have more opportunities to score more points. More generally, the relationship between average points in each game by the total minutes played across the season.&lt;/p&gt;
&lt;p&gt;One first step in an analysis would be to explore each distribution independently first. I&amp;rsquo;m going to leave that as an exercise for you to do on your own.&lt;/p&gt;
&lt;p&gt;The next step would be to explore the bivariate figure of these two attributes. As both of these attributes are continuous ratio type attributes, a scatterplot would be one way to visualize this. A scatterplot takes each X,Y pair of data and plots those coordinates. This can be done in R with the following code.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;questions-to-consider&#34;&gt;Questions to consider&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;What can be noticed about the relationship between these two attributes?&lt;/li&gt;
&lt;li&gt;Does there appear to be a relationship between the two?&lt;/li&gt;
&lt;li&gt;Is this relationship perfect?&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;adding-a-smoother-line&#34;&gt;Adding a smoother line&lt;/h2&gt;
&lt;p&gt;Adding a smoother line to the figure can help to guide how strong the relationship may be. In general, there are two types of smoothers that we will consider in this course. One is flexible and data dependent. This means that the functional form of the relationship is flexible to allow the data to specify if there are in non-linear aspects. The second is a linear or straight-line approach.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to add both to the figure below. The flexible (in this case this is a LOESS curve) curve is darker blue, the linear line is lighter blue.&lt;/p&gt;
&lt;p&gt;Does there appear to be much difference in the relationship across the two lines?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_smooth() %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;estimating-linear-regression-coefficients&#34;&gt;Estimating linear regression coefficients&lt;/h2&gt;
&lt;p&gt;The linear regression coefficients can be estimated within any statistical software (or by hand, even if tedious). Within R, the primary function is &lt;code&gt;lm()&lt;/code&gt; to estimate a linear regression. The primary argument is a formula similar to the regression formula shown above at the top of the notes.&lt;/p&gt;
&lt;p&gt;This equation could be written more directly for our specific problem.&lt;/p&gt;
&lt;p&gt;$$
Avg_points = \beta_{0} + \beta_{1} Minutes_Played + \epsilon
$$&lt;/p&gt;
&lt;p&gt;One way to read this equation is that the number of minutes played for each player helps to understand variation or differences in the average points scored for that player. Or, average points is modeled or explained by minutes played.&lt;/p&gt;
&lt;p&gt;For the R formula, instead of an $ = $, you could insert a ~.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;wnba_reg &amp;lt;- lm(avg_points ~ total_minutes, data = basketball)
coef(wnba_reg)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   (Intercept) total_minutes 
##    1.13562456    0.01014207
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;interpretting-linear-regression-terms&#34;&gt;Interpretting linear regression terms&lt;/h2&gt;
&lt;p&gt;Now that we have estimates for the linear regression terms, how are these interpretted? The linear regression equation with these estimates plugged in would look like the following:&lt;/p&gt;
&lt;p&gt;$$
\hat{avg_points} = 1.1356 + .0101 min_played
$$&lt;/p&gt;
&lt;p&gt;Where instead of &lt;code&gt;\(\beta_{0}\)&lt;/code&gt; or &lt;code&gt;\(\beta_{1}\)&lt;/code&gt;, the estimated values from this single season were inserted. Note the &lt;code&gt;\(\hat{avg\_points}\)&lt;/code&gt;, which the caret symbol is read as a hat, that is, average points hat, is a very important small distinction. This now represents the predicted values for the linear regression. That means, that the predicted value for the average number of points is assumed to function solely based on the minutes a player played. We could put in any value for the minutes played and get an estimated average number of points out.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.1356
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.1457
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 100
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.1456
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * mean(basketball$avg_points)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.189732
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 5000
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 51.6356
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * -50
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.6306
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also notice from the equation above with the estimated coefficients, there is no longer any error. More on this later, but I wanted to point that out now. Back to model interpretations, these can become a bit more obvious with the values computed above by inputting specific values for the total minutes played.&lt;/p&gt;
&lt;p&gt;First, for the intercept ($\beta_{0}$), notice that for the first computation above when 0 total minutes was input into the equation, that the same value for the intercept estimate was returned. This highlights what the intercept is, the average number of points scored when the X attribute (minutes played) equals 0.&lt;/p&gt;
&lt;p&gt;The slope, ($\beta_{1}$), term is the average change in the outcome (average points here) for a one unit change in the predictor attribute (minutes played). Therefore, the slope here is 0.0101, which means that the average points scores increases by about 0.01 points for every additional minute played. This effect is additive, meaning that the 0.01 for a one unit change, say from 100 to 101 minutes, will remain when increasing from 101 to 102 minutes.&lt;/p&gt;
&lt;p&gt;The predictions coming from the linear regression are the same as the light blue dashed line shown in the figure above and recreated here without the dark blue line.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-about-the-error&#34;&gt;What about the error?&lt;/h2&gt;
&lt;p&gt;So far the error has been disregarded, but where did it go? The error didn&amp;rsquo;t disappear, it is actually in the figure just created above. Where can you see the error? Why was it disregarded when creating the predicted values?&lt;/p&gt;
&lt;p&gt;The short answer is that the error in a linear regression is commonly assumed to follow a Normal distribution with a mean of 0 and some variance, &lt;code&gt;\(\sigma^2\)&lt;/code&gt;. Sometimes this is written in math notation as:&lt;/p&gt;
&lt;p&gt;$$
\epsilon \sim N(0, \sigma^2)
$$&lt;/p&gt;
&lt;p&gt;From this notation, can you see why the error was disregarded earlier when generating predictions?&lt;/p&gt;
&lt;p&gt;In short, on average, the error is assumed to be 0 across all the sample data. The error will be smaller when the data are more closely clustered around the linear regression line and larger when the data are not clustered around the linear regression line. In the simple case with a single predictor, the error would be minimized when the correlation is closest to 1 in absolute value and largest when the correlation close to or equals 0.&lt;/p&gt;
&lt;h3 id=&#34;estimating-error-in-linear-regression&#34;&gt;Estimating error in linear regression&lt;/h3&gt;
&lt;p&gt;This comes from partitioning of variance that you maybe heard from a design of experiment or analysis of variance course. More specifically, the variance in the outcome can be partioned or split into two components, those that the independent attribute helped to explain vs those that it can not explain. The part that can be explained is sometimes referred to as the &lt;em&gt;sum of squares regression&lt;/em&gt; (SSR), the portion that is unexplained is referred to as the &lt;em&gt;sum of squares error&lt;/em&gt; (SSE). This could be written in math notation as:&lt;/p&gt;
&lt;p&gt;$$
\sum (Y - \bar{Y})^2 = \sum (Y - \hat{Y})^2 + \sum (\hat{Y} - \bar{Y})^2
$$&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s try to visualize what this means.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_hline(yintercept = ~mean(avg_points), data = basketball) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_segment(avg_points + mean(avg_points) ~ total_minutes + total_minutes, data = basketball, color = &#39;#FF7F7F&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_hline(yintercept = ~mean(avg_points), data = basketball) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_segment(avg_points + fitted(wnba_reg) ~ total_minutes + total_minutes, data = basketball, color = &#39;#65a765&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_hline(yintercept = ~mean(avg_points), data = basketball) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_segment(mean(avg_points) + fitted(wnba_reg) ~ total_minutes + total_minutes, data = basketball, color = &#39;#FFD580&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;another-related-measure-of-error&#34;&gt;Another related measure of error&lt;/h2&gt;
&lt;p&gt;Another way to get a measure of how well the model is performing, would be a statistic called R-squared. This statistic is a function of the sum of squares described above.&lt;/p&gt;
&lt;p&gt;$$
R^{2} = 1 - \frac{SS_{res}}{SS_{total}}
$$&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;$$
R^{2} = \frac{SS_{reg}}{SS_{total}}
$$&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s compute the sum of square and get a value for &lt;code&gt;\(R^2\)&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;basketball %&amp;gt;%
summarise(ss_total = sum((avg_points - mean(avg_points))^2),
          ss_error = sum((avg_points - fitted(wnba_reg))^2),
          ss_reg = sum((fitted(wnba_reg) - mean(avg_points))^2)) %&amp;gt;%
mutate(r_square = 1 - ss_error / ss_total,
       r_square2 = ss_reg / ss_total)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 × 5
##   ss_total ss_error ss_reg r_square r_square2
##      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1    2004.     564.  1440.    0.719     0.719
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(wnba_reg)$r.square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.7185315
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(wnba_reg)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.979045
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sigma_hat_square &amp;lt;- 563.9929 / (nrow(basketball) - 2)
sigma_hat &amp;lt;- sqrt(sigma_hat_square)

sigma_hat_square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.916617
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sigma_hat
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.979045
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Week 1</title>
      <link>https://psqf6243.brandonlebeau.org/content/01-week1/</link>
      <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/01-week1/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This week is an introduction to the course. Primary content will be a review to set the basis for the remainder of the semester.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read syllabus, ask any questions&lt;/li&gt;
&lt;li&gt;Review &lt;a href=&#34;../../lectures/01-review/&#34;&gt;introductory statistics content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Explore R code from introductory slides&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;activities&#34;&gt;Activities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Review introductory statistics content
&lt;ul&gt;
&lt;li&gt;Chapters 2 - 4 of &lt;a href=&#34;https://lebebr01.github.io/stat_thinking/visualization.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Statistical Reasoning through computation and R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optional, complete &lt;a href=&#34;https://forms.office.com/r/40cahs1wma&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;course survey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assignments&#34;&gt;Assignments&lt;/h2&gt;
&lt;p&gt;None this week.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 2</title>
      <link>https://psqf6243.brandonlebeau.org/content/02-week2/</link>
      <pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/02-week2/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This week is an introduction to linear regression. The primary goal of this week is to introduce the model and get familiar with the basic interpretation of parameters.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Recognize a linear regression formula&lt;/li&gt;
&lt;li&gt;Interpret regression parameters&lt;/li&gt;
&lt;li&gt;Specify a linear regression in statistical software&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;activities&#34;&gt;Activities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read Chapter 1 of &lt;a href=&#34;https://dx-doi-org.proxy.lib.uiowa.edu/10.4135/9781483396774.n1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Applied Regression: An Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Engage with &lt;a href=&#34;../../lectures/&#34;&gt;course notes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optional, Read Chapter 7 of &lt;a href=&#34;https://lebebr01.github.io/stat_thinking/linear-regression.html#simple-regression-continuous-predictor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Statistical Reasoning through Computation and R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional, Read 7.1 and 7.2 of &lt;a href=&#34;https://openintro-ims.netlify.app/model-slr.html#model-slr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Modern Statistics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assignments&#34;&gt;Assignments&lt;/h2&gt;
&lt;p&gt;TBA&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Linear Regression - Class Notes</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class/</link>
      <pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class/</guid>
      <description>&lt;h1 id=&#34;introduction-to-linear-regression&#34;&gt;Introduction to Linear Regression&lt;/h1&gt;
&lt;p&gt;This week will dive into linear regression, the foundation of this course. The exploration into linear regression will first start with the case when we have 2 &lt;strong&gt;continuous&lt;/strong&gt; attributes. One of those attributes will be the &lt;em&gt;outcome&lt;/em&gt; or &lt;em&gt;attribute of interest&lt;/em&gt; whereas the other will used as a &lt;em&gt;predictor&lt;/em&gt;. The outcome or attribute of interest is sometimes referred to as the dependent variable and the predictor is sometimes referred to as the independent variable. One way to think about this is that the dependent variable depends or is a function of the other attributes of interest. In linear regression terms, it could also be said that the independent variable &lt;strong&gt;explains variation&lt;/strong&gt; in the dependent variable (more on this later).&lt;/p&gt;
&lt;p&gt;Of note, variable is a typical word used in statistics, I&amp;rsquo;ve come to like the word &lt;strong&gt;attribute&lt;/strong&gt; instead of variable. I will tend to use attribute, as in, a data attribute, but these are roughly interchangeable in my terminology.&lt;/p&gt;
&lt;p&gt;We may write this general model as:&lt;/p&gt;
&lt;p&gt;$$
Y = \beta_{0} + \beta_{1} X + \epsilon
$$&lt;/p&gt;
&lt;p&gt;Where &lt;code&gt;\(Y\)&lt;/code&gt; is the outcome attribute. It is also known as the dependent variable. The &lt;code&gt;\(X\)&lt;/code&gt; term is the predictor/covariate attribute. It is also known as the independent variable. The &lt;code&gt;\(\epsilon\)&lt;/code&gt; is a random error term, more on this later. Finally, &lt;code&gt;\(\beta_{0}\)&lt;/code&gt; and &lt;code&gt;\(\beta_{1}\)&lt;/code&gt; are unknown population coefficients that we are interested in estimating. More on this later too.&lt;/p&gt;
&lt;h2 id=&#34;specific-example&#34;&gt;Specific example&lt;/h2&gt;
&lt;p&gt;The data used for this section of the course is from the 2019 WNBA season. These data are part of the &lt;a href=&#34;https://www.bayesrulesbook.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;bayesrules&lt;/em&gt; package/book&lt;/a&gt;. The data contain 146 rows, one for each WNBA player sampled, and 32 attributes for that player. The R packages are loaded and the first few rows of the data are shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mosaic)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &#39;mosaic&#39;:
##   method                           from   
##   fortify.SpatialPolygonsDataFrame ggplot2
## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Attaching package: &#39;mosaic&#39;
## 
## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
## 
## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     cross
## 
## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
## 
## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,
##     quantile, sd, t.test, var
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)

basketball &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/basketball.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 146 Columns: 32
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr  (2): player_name, team
## dbl (29): height, weight, year, age, games_played, games_started, avg_minute...
## lgl  (1): starter
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;theme_set(theme_bw(base_size = 18))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(basketball)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 × 32
##   player_name    height weight  year team    age games…¹ games…² avg_m…³ avg_f…⁴
##   &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Natalie Achon…     75    190  2019 IND      26      30      18    21.2     3.3
## 2 Kayla Alexand…     76    195  2019 CHI      28       3       0     6.7     1  
## 3 Rebecca Allen      74    162  2019 NYL      26      24       2    17.2     2.7
## 4 Jillian Alley…     74    193  2019 MIN      24       5       0     2.8     0.4
## 5 Kristine Anig…     76    200  2019 TOT      22      27       0     9.3     0.8
## 6 Kristine Anig…     76    200  2019 CON      22      17       0     7.1     0.6
## # … with 22 more variables: avg_field_goal_attempts &amp;lt;dbl&amp;gt;,
## #   field_goal_pct &amp;lt;dbl&amp;gt;, avg_three_pointers &amp;lt;dbl&amp;gt;,
## #   avg_three_pointer_attempts &amp;lt;dbl&amp;gt;, three_pointer_pct &amp;lt;dbl&amp;gt;,
## #   avg_two_pointers &amp;lt;dbl&amp;gt;, avg_two_pointer_attempts &amp;lt;dbl&amp;gt;,
## #   two_pointer_pct &amp;lt;dbl&amp;gt;, avg_free_throws &amp;lt;dbl&amp;gt;,
## #   avg_free_throw_attempts &amp;lt;dbl&amp;gt;, free_throw_pct &amp;lt;dbl&amp;gt;,
## #   avg_offensive_rb &amp;lt;dbl&amp;gt;, avg_defensive_rb &amp;lt;dbl&amp;gt;, avg_rb &amp;lt;dbl&amp;gt;, …
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;guiding-question&#34;&gt;Guiding Question&lt;/h2&gt;
&lt;p&gt;Suppose we are interested in exploring if players tend to score more points by playing more minutes in the season. That is, those that play more may have more opportunities to score more points. More generally, the relationship between average points in each game by the total minutes played across the season.&lt;/p&gt;
&lt;p&gt;One first step in an analysis would be to explore each distribution independently first. I&amp;rsquo;m going to leave that as an exercise for you to do on your own.&lt;/p&gt;
&lt;p&gt;The next step would be to explore the bivariate figure of these two attributes. As both of these attributes are continuous ratio type attributes, a scatterplot would be one way to visualize this. A scatterplot takes each X,Y pair of data and plots those coordinates. This can be done in R with the following code.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) |&amp;gt;
  gf_smooth(method = &#39;lm&#39;, size = 4) |&amp;gt;
  gf_smooth(linetype = 2, color = &#39;black&#39;, size = 4) |&amp;gt;
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;filter(basketball, avg_points &amp;gt; 15)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 × 32
##   player_name    height weight  year team    age games…¹ games…² avg_m…³ avg_f…⁴
##   &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Arike Ogunbow…     68    165  2019 DAL      22      33      28    32.1     6.5
## # … with 22 more variables: avg_field_goal_attempts &amp;lt;dbl&amp;gt;,
## #   field_goal_pct &amp;lt;dbl&amp;gt;, avg_three_pointers &amp;lt;dbl&amp;gt;,
## #   avg_three_pointer_attempts &amp;lt;dbl&amp;gt;, three_pointer_pct &amp;lt;dbl&amp;gt;,
## #   avg_two_pointers &amp;lt;dbl&amp;gt;, avg_two_pointer_attempts &amp;lt;dbl&amp;gt;,
## #   two_pointer_pct &amp;lt;dbl&amp;gt;, avg_free_throws &amp;lt;dbl&amp;gt;,
## #   avg_free_throw_attempts &amp;lt;dbl&amp;gt;, free_throw_pct &amp;lt;dbl&amp;gt;,
## #   avg_offensive_rb &amp;lt;dbl&amp;gt;, avg_defensive_rb &amp;lt;dbl&amp;gt;, avg_rb &amp;lt;dbl&amp;gt;, …
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;questions-to-consider&#34;&gt;Questions to consider&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;What can be noticed about the relationship between these two attributes?&lt;/li&gt;
&lt;li&gt;Does there appear to be a relationship between the two?&lt;/li&gt;
&lt;li&gt;Is this relationship perfect?&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;adding-a-smoother-line&#34;&gt;Adding a smoother line&lt;/h2&gt;
&lt;p&gt;Adding a smoother line to the figure can help to guide how strong the relationship may be. In general, there are two types of smoothers that we will consider in this course. One is flexible and data dependent. This means that the functional form of the relationship is flexible to allow the data to specify if there are in non-linear aspects. The second is a linear or straight-line approach.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to add both to the figure below. The flexible (in this case this is a LOESS curve) curve is darker blue, the linear line is lighter blue.&lt;/p&gt;
&lt;p&gt;Does there appear to be much difference in the relationship across the two lines?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  #gf_smooth() %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;,  color = &#39;lightblue&#39;, size = 4) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cor(avg_points ~ total_minutes, data = basketball)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8476624
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_smooth(color = &#39;black&#39;, size = 3) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, size = 4, color = &#39;blue&#39;)
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(simglm)

sim_args &amp;lt;- list(
    formula = y ~ 1 + poly(x1, degree = 2),
    fixed = list(x1 = list(var_type = &#39;continuous&#39;)),
    sample_size = 2000,
    reg_weights = c(1, 2, -200)
)

poly_data &amp;lt;- simulate_fixed(data = NULL, sim_args) |&amp;gt;
simulate_error(sim_args) |&amp;gt;
generate_response(sim_args)

head(poly_data)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   X.Intercept.          x1_1         x1_2          x1 level1_id      error
## 1            1 -0.0139665906 -0.009918615 -0.61044255         1 -0.7338556
## 2            1 -0.0661016613  0.117671652 -2.92031675         2  0.4786632
## 3            1  0.0003739655 -0.015475851  0.02492401         3  0.9959537
## 4            1 -0.0353361598  0.022007872 -1.55723357         4  1.4491733
## 5            1  0.0176554909 -0.005239858  0.79059190         5 -1.1436860
## 6            1  0.0467127309  0.053692296  2.07798958         6 -1.5065093
##   fixed_outcome random_effects           y
## 1      2.955790              0   2.2219341
## 2    -22.666534              0 -22.1878705
## 3      4.095918              0   5.0918717
## 4     -3.472247              0  -2.0230733
## 5      2.083282              0   0.9395965
## 6     -9.645034              0 -11.1515431
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(y ~ x1, data = poly_data, size = 3) |&amp;gt;
  gf_smooth(method = &#39;lm&#39;, color = &#39;lightblue&#39;) |&amp;gt;
  gf_smooth(method = &#39;loess&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;estimating-linear-regression-coefficients&#34;&gt;Estimating linear regression coefficients&lt;/h2&gt;
&lt;p&gt;The linear regression coefficients can be estimated within any statistical software (or by hand, even if tedious). Within R, the primary function is &lt;code&gt;lm()&lt;/code&gt; to estimate a linear regression. The primary argument is a formula similar to the regression formula shown above at the top of the notes.&lt;/p&gt;
&lt;p&gt;This equation could be written more directly for our specific problem.&lt;/p&gt;
&lt;p&gt;$$
Avg_points = \beta_{0} + \beta_{1} Minutes_Played + \epsilon
$$&lt;/p&gt;
&lt;p&gt;$$
Avg_points = 1.14 + .01 Minutes_Played + \epsilon
$$&lt;/p&gt;
&lt;p&gt;One way to read this equation is that the number of minutes played for each player helps to understand variation or differences in the average points scored for that player. Or, average points is modeled or explained by minutes played.&lt;/p&gt;
&lt;p&gt;For the R formula, instead of an $ = $, you could insert a ~.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;wnba_reg &amp;lt;- lm(avg_points ~ total_minutes, data = basketball)
coef(wnba_reg)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   (Intercept) total_minutes 
##    1.13562456    0.01014207
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;basketball &amp;lt;- basketball |&amp;gt;
  mutate(minutes_100 = total_minutes / 100)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ minutes_100, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  #gf_smooth() %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;,  color = &#39;lightblue&#39;, size = 4) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;wnba_reg &amp;lt;- lm(avg_points ~ minutes_100, data = basketball)
coef(wnba_reg)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept) minutes_100 
##    1.135625    1.014207
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;interpretting-linear-regression-terms&#34;&gt;Interpretting linear regression terms&lt;/h2&gt;
&lt;p&gt;Now that we have estimates for the linear regression terms, how are these interpretted? The linear regression equation with these estimates plugged in would look like the following:&lt;/p&gt;
&lt;p&gt;$$
\hat{avg_points} = 1.1356 + .0101 min_played
$$&lt;/p&gt;
&lt;p&gt;Where instead of &lt;code&gt;\(\beta_{0}\)&lt;/code&gt; or &lt;code&gt;\(\beta_{1}\)&lt;/code&gt;, the estimated values from this single season were inserted. Note the &lt;code&gt;\(\hat{avg\_points}\)&lt;/code&gt;, which the caret symbol is read as a hat, that is, average points hat, is a very important small distinction. This now represents the predicted values for the linear regression. That means, that the predicted value for the average number of points is assumed to function solely based on the minutes a player played. We could put in any value for the minutes played and get an estimated average number of points out.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.1356
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.1457
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 100
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.1456
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * mean(basketball$avg_points)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.189732
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * 5000
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 51.6356
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1.1356 + .0101 * -50
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.6306
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also notice from the equation above with the estimated coefficients, there is no longer any error. More on this later, but I wanted to point that out now. Back to model interpretations, these can become a bit more obvious with the values computed above by inputting specific values for the total minutes played.&lt;/p&gt;
&lt;p&gt;First, for the intercept ($\beta_{0}$), notice that for the first computation above when 0 total minutes was input into the equation, that the same value for the intercept estimate was returned. This highlights what the intercept is, the average number of points scored when the X attribute (minutes played) equals 0.&lt;/p&gt;
&lt;p&gt;The slope, ($\beta_{1}$), term is the average change in the outcome (average points here) for a one unit change in the predictor attribute (minutes played). Therefore, the slope here is 0.0101, which means that the average points scores increases by about 0.01 points for every additional minute played. This effect is additive, meaning that the 0.01 for a one unit change, say from 100 to 101 minutes, will remain when increasing from 101 to 102 minutes.&lt;/p&gt;
&lt;p&gt;The predictions coming from the linear regression are the same as the light blue dashed line shown in the figure above and recreated here without the dark blue line.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-about-the-error&#34;&gt;What about the error?&lt;/h2&gt;
&lt;p&gt;So far the error has been disregarded, but where did it go? The error didn&amp;rsquo;t disappear, it is actually in the figure just created above. Where can you see the error? Why was it disregarded when creating the predicted values?&lt;/p&gt;
&lt;p&gt;The short answer is that the error in a linear regression is commonly assumed to follow a Normal distribution with a mean of 0 and some variance, &lt;code&gt;\(\sigma^2\)&lt;/code&gt;. Sometimes this is written in math notation as:&lt;/p&gt;
&lt;p&gt;$$
\epsilon \sim N(0, \sigma^2)
$$&lt;/p&gt;
&lt;p&gt;From this notation, can you see why the error was disregarded earlier when generating predictions?&lt;/p&gt;
&lt;p&gt;In short, on average, the error is assumed to be 0 across all the sample data. The error will be smaller when the data are more closely clustered around the linear regression line and larger when the data are not clustered around the linear regression line. In the simple case with a single predictor, the error would be minimized when the correlation is closest to 1 in absolute value and largest when the correlation close to or equals 0.&lt;/p&gt;
&lt;h3 id=&#34;estimating-error-in-linear-regression&#34;&gt;Estimating error in linear regression&lt;/h3&gt;
&lt;p&gt;This comes from partitioning of variance that you maybe heard from a design of experiment or analysis of variance course. More specifically, the variance in the outcome can be partioned or split into two components, those that the independent attribute helped to explain vs those that it can not explain. The part that can be explained is sometimes referred to as the &lt;em&gt;sum of squares regression&lt;/em&gt; (SSR), the portion that is unexplained is referred to as the &lt;em&gt;sum of squares error&lt;/em&gt; (SSE). This could be written in math notation as:&lt;/p&gt;
&lt;p&gt;$$
\sum (Y - \bar{Y})^2 = \sum (Y - \hat{Y})^2 + \sum (\hat{Y} - \bar{Y})^2
$$&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s try to visualize what this means.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_hline(yintercept = ~mean(avg_points), data = basketball) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_segment(avg_points + mean(avg_points) ~ total_minutes + total_minutes, data = basketball, color = &#39;#FF7F7F&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_hline(yintercept = ~mean(avg_points), data = basketball) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_segment(avg_points + fitted(wnba_reg) ~ total_minutes + total_minutes, data = basketball, color = &#39;#65a765&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(avg_points ~ total_minutes, data = basketball, size = 4, alpha = .5) %&amp;gt;% 
  gf_hline(yintercept = ~mean(avg_points), data = basketball) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, linetype = 2, color = &#39;lightblue&#39;) %&amp;gt;%
  gf_segment(mean(avg_points) + fitted(wnba_reg) ~ total_minutes + total_minutes, data = basketball, color = &#39;#FFD580&#39;) %&amp;gt;%
  gf_labs(x = &amp;quot;Total Minutes Played&amp;quot;,
          y = &amp;quot;Average Points Scored&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression-class_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;another-related-measure-of-error&#34;&gt;Another related measure of error&lt;/h2&gt;
&lt;p&gt;Another way to get a measure of how well the model is performing, would be a statistic called R-squared. This statistic is a function of the sum of squares described above.&lt;/p&gt;
&lt;p&gt;$$
R^{2} = 1 - \frac{SS_{res}}{SS_{total}}
$$&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;$$
R^{2} = \frac{SS_{reg}}{SS_{total}}
$$&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s compute the sum of square and get a value for &lt;code&gt;\(R^2\)&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;basketball %&amp;gt;%
summarise(ss_total = sum((avg_points - mean(avg_points))^2),
          ss_error = sum((avg_points - fitted(wnba_reg))^2),
          ss_reg = sum((fitted(wnba_reg) - mean(avg_points))^2)) %&amp;gt;%
mutate(r_square = 1 - ss_error / ss_total,
       r_square2 = ss_reg / ss_total)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 × 5
##   ss_total ss_error ss_reg r_square r_square2
##      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1    2004.     564.  1440.    0.719     0.719
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(wnba_reg)$r.square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.7185315
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(wnba_reg)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.979045
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sigma_hat_square &amp;lt;- 563.9929 / (nrow(basketball) - 2)
sigma_hat &amp;lt;- sqrt(sigma_hat_square)

sigma_hat_square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.916617
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sigma_hat
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.979045
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;$$
\sigma^2 = \frac{SS_{error}}{n - 2}
$$&lt;/p&gt;
&lt;p&gt;$$
\sigma = \sqrt{\sigma^2}
$$&lt;/p&gt;
&lt;p&gt;$$
\hat{\sigma}
$$&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Regression Estimates</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/03-regression-estimates/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/03-regression-estimates/</guid>
      <description>&lt;h1 id=&#34;understanding-regression-parameters&#34;&gt;Understanding Regression Parameters&lt;/h1&gt;
&lt;p&gt;This section of notes aims to dig a bit more into what the simple linear regression (i.e., regression with a single continuous covariate/attribute) parameter estimates mean. We will consider the estimation formulas in part of this to gain a sense of how these can be computed.&lt;/p&gt;
&lt;h2 id=&#34;new-example-data&#34;&gt;New Example Data&lt;/h2&gt;
&lt;p&gt;The new data for this section of notes will explore data from the &lt;a href=&#34;https://www.epa.gov/outdoor-air-quality-data&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Environmental Protection Agency on Air Quality&lt;/a&gt; collected for the state of Iowa in 2021. The data are daily values for PM 2.5 particulates. The attributes included in the data are shown below with a short description.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Variable&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;date&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Date of observation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Site ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;poc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Parameter Occurrence Code (POC)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pm2.5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Average daily pm 2.5 particulate value, in (ug/m3; micrograms per meter cubed)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;daily_aqi&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Average air quality index&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;site_name&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Site Name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;aqs_parameter_desc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Text Description of Observation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cbsa_code&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Core Based Statistical Area (CBSA) ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cbsa_name&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CBSA Name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;county&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;County in Iowa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;avg_wind&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Average daily wind speed (in knots)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max_wind&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Maximum daily wind speed (in knots)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max_wind_hours&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Time of maximum daily wind speed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;guiding-question&#34;&gt;Guiding Question&lt;/h3&gt;
&lt;p&gt;How is average daily wind speed related to the daily air quality index?&lt;/p&gt;
&lt;h2 id=&#34;bivariate-figure&#34;&gt;Bivariate Figure&lt;/h2&gt;
&lt;p&gt;Note, below I do a bit of post-processing to combine data from different POC values within a single CBSA.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
## 
## Attaching package: &#39;ggstance&#39;
## 
## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
## 
## Loading required package: scales
## 
## Attaching package: &#39;scales&#39;
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     discard
## 
## The following object is masked from &#39;package:readr&#39;:
## 
##     col_factor
## 
## Loading required package: ggridges
## 
## New to ggformula?  Try the tutorials: 
## 	learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
## 	learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mosaic)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &#39;mosaic&#39;:
##   method                           from   
##   fortify.SpatialPolygonsDataFrame ggplot2
## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Attaching package: &#39;mosaic&#39;
## 
## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
## 
## The following object is masked from &#39;package:scales&#39;:
## 
##     rescale
## 
## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     cross
## 
## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
## 
## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,
##     quantile, sd, t.test, var
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;theme_set(theme_bw(base_size = 18))

airquality &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/iowa_air_quality_2021.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 6917 Columns: 10
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr (5): date, site_name, aqs_parameter_desc, cbsa_name, county
## dbl (5): id, poc, pm2.5, daily_aqi, cbsa_code
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;wind &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/daily_WIND_2021-iowa.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 1537 Columns: 5
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr (2): date, cbsa_name
## dbl (3): avg_wind, max_wind, max_wind_hours
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;airquality &amp;lt;- airquality %&amp;gt;%
   left_join(wind, by = c(&#39;cbsa_name&#39;, &#39;date&#39;)) %&amp;gt;% 
   drop_na()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(airquality)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 × 13
##   date           id   poc pm2.5 daily_aqi site_…¹ aqs_p…² cbsa_…³ cbsa_…⁴ county
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; 
## 1 1/1/21  190130009     1  15.1        57 Water … PM2.5 …   47940 Waterl… Black…
## 2 1/4/21  190130009     1  13.3        54 Water … PM2.5 …   47940 Waterl… Black…
## 3 1/7/21  190130009     1  20.5        69 Water … PM2.5 …   47940 Waterl… Black…
## 4 1/10/21 190130009     1  14.3        56 Water … PM2.5 …   47940 Waterl… Black…
## 5 1/13/21 190130009     1  13.7        54 Water … PM2.5 …   47940 Waterl… Black…
## 6 1/16/21 190130009     1   5.3        22 Water … PM2.5 …   47940 Waterl… Black…
## # … with 3 more variables: avg_wind &amp;lt;dbl&amp;gt;, max_wind &amp;lt;dbl&amp;gt;,
## #   max_wind_hours &amp;lt;dbl&amp;gt;, and abbreviated variable names ¹​site_name,
## #   ²​aqs_parameter_desc, ³​cbsa_code, ⁴​cbsa_name
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dim(airquality)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4821   13
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(daily_aqi ~ avg_wind, data = airquality, size = 4, alpha = .15) %&amp;gt;%
  gf_labs(x = &amp;quot;Average daily wind speed (in knots)&amp;quot;,
          y = &amp;quot;Daily Air Quality&amp;quot;) %&amp;gt;%
  gf_smooth() %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, color = &#39;lightblue&#39;, linetype = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;gam&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/03-regression-estimates_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cor(daily_aqi ~ avg_wind, data = airquality) |&amp;gt; round(3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.292
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;air_lm &amp;lt;- lm(daily_aqi ~ avg_wind, data = airquality)
coef(air_lm) |&amp;gt; round(3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##      48.223      -2.212
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm)$r.square |&amp;gt; round(3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.085
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm)$sigma |&amp;gt; round(3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 18.055
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;interpreting-these-estimates&#34;&gt;Interpreting these estimates&lt;/h3&gt;
&lt;p&gt;What do these parameter estimates mean in this context?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intercept:&lt;/strong&gt; This is the model implied ______ when the ________ equals 0.&lt;br&gt;
&lt;strong&gt;Slope:&lt;/strong&gt; For each 1 unit change in ____ there is a -2.2 unit decrease in ___.&lt;br&gt;
&lt;strong&gt;R-Square:&lt;/strong&gt; The _____ in ____ is explained by ____. &lt;br&gt;
&lt;strong&gt;Sigma:&lt;/strong&gt; The _____ distance each point is from ____.&lt;/p&gt;
&lt;h2 id=&#34;centering-predictors&#34;&gt;Centering predictors&lt;/h2&gt;
&lt;p&gt;There are times when centering of predictors can be helpful for interpretation of the model parameters. This can be helpful when 0 is not a practically useful characteristic of the attribute or for more specific tests of certain elements of the X attribute.&lt;/p&gt;
&lt;h3 id=&#34;mean-centering&#34;&gt;Mean Centering&lt;/h3&gt;
&lt;p&gt;Mean centering is where the mean of the attribute is subtracted from each value. This is a linear transformation where each data point is subtracted by a constant, the mean. This means that the distance between points do not change.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;airquality &amp;lt;- airquality %&amp;gt;%
  mutate(avg_wind_mc = avg_wind - mean(avg_wind),
         avg_wind_maxc = avg_wind - max(avg_wind),
         avg_wind_10 = avg_wind - 10)

gf_point(daily_aqi ~ avg_wind_mc, data = airquality, size = 4, alpha = .15) %&amp;gt;%
  gf_labs(x = &amp;quot;Average daily wind speed (in knots)&amp;quot;,
          y = &amp;quot;Daily Air Quality&amp;quot;) %&amp;gt;%
  gf_smooth() %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;, color = &#39;lightblue&#39;, linetype = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;gam&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/03-regression-estimates_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;air_lm_mc &amp;lt;- lm(daily_aqi ~ avg_wind_mc, data = airquality)
coef(air_lm_mc)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept) avg_wind_mc 
##   38.788011   -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_mc)$r.square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.08528019
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_mc)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 18.05479
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;air_lm_maxc &amp;lt;- lm(daily_aqi ~ avg_wind_maxc, data = airquality)
coef(air_lm_maxc)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   (Intercept) avg_wind_maxc 
##      5.968391     -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_maxc)$r.square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.08528019
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_maxc)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 18.05479
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;air_lm_10 &amp;lt;- lm(daily_aqi ~ avg_wind_10, data = airquality)
coef(air_lm_10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept) avg_wind_10 
##   26.104968   -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_10)$r.square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.08528019
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_10)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 18.05479
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;standardized-regression&#34;&gt;Standardized Regression&lt;/h2&gt;
&lt;p&gt;Another type of regression that can be done is one in which the attributes are standardized prior to estimating the linear regression. What is meant by standardizing? This is converting the attributes into z-scores:&lt;/p&gt;
&lt;p&gt;$$
Z_{api} = \frac{(aqi - \bar{aqi})}{s_{aqi}}
$$&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;airquality &amp;lt;- airquality %&amp;gt;%
  mutate(z_aqi = scale(daily_aqi),
         z_aqi2 = (daily_aqi - mean(daily_aqi)) / sd(daily_aqi),
         z_wind = scale(avg_wind))

head(airquality)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 × 19
##   date           id   poc pm2.5 daily_aqi site_…¹ aqs_p…² cbsa_…³ cbsa_…⁴ county
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; 
## 1 1/1/21  190130009     1  15.1        57 Water … PM2.5 …   47940 Waterl… Black…
## 2 1/4/21  190130009     1  13.3        54 Water … PM2.5 …   47940 Waterl… Black…
## 3 1/7/21  190130009     1  20.5        69 Water … PM2.5 …   47940 Waterl… Black…
## 4 1/10/21 190130009     1  14.3        56 Water … PM2.5 …   47940 Waterl… Black…
## 5 1/13/21 190130009     1  13.7        54 Water … PM2.5 …   47940 Waterl… Black…
## 6 1/16/21 190130009     1   5.3        22 Water … PM2.5 …   47940 Waterl… Black…
## # … with 9 more variables: avg_wind &amp;lt;dbl&amp;gt;, max_wind &amp;lt;dbl&amp;gt;,
## #   max_wind_hours &amp;lt;dbl&amp;gt;, avg_wind_mc &amp;lt;dbl&amp;gt;, avg_wind_maxc &amp;lt;dbl&amp;gt;,
## #   avg_wind_10 &amp;lt;dbl&amp;gt;, z_aqi &amp;lt;dbl[,1]&amp;gt;, z_aqi2 &amp;lt;dbl&amp;gt;, z_wind &amp;lt;dbl[,1]&amp;gt;, and
## #   abbreviated variable names ¹​site_name, ²​aqs_parameter_desc, ³​cbsa_code,
## #   ⁴​cbsa_name
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;air_lm_s &amp;lt;- lm(z_aqi ~ z_wind, data = airquality)
coef(air_lm_s)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   (Intercept)        z_wind 
## -6.712023e-16 -2.920277e-01
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_s)$r.square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.08528019
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm_s)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.9565091
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also use this formula to convert any unstandardized regression coefficients into a standardized metric.&lt;/p&gt;
&lt;p&gt;$$
b^{&#39;}&lt;em&gt;{k} = b&lt;/em&gt;{k} * \frac{s_{x_{k}}}{s_{y}}
$$&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;-2.211 * sd(airquality$avg_wind) / sd(airquality$daily_aqi)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.2919224
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cor(daily_aqi ~ avg_wind, data = airquality)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.2920277
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;parameter-estimation&#34;&gt;Parameter Estimation&lt;/h2&gt;
&lt;p&gt;Now that we looked how the parameters are impacted by some changes in the model specification, how are these parameters actually estimated? I will show two ways, one is general, the other is specific to this simple case with a single predictor/covariate attribute. In general, linear regression (or more generally the general linear model) uses least square estimation. This means that the the parameters in the model minimize the squared distance between the observed and predicted values. That is, least squares estimates minimize this criterion:&lt;/p&gt;
&lt;p&gt;$$
\sum (Y - \hat{Y})^2
$$&lt;/p&gt;
&lt;h3 id=&#34;specific-example&#34;&gt;Specific example&lt;/h3&gt;
&lt;p&gt;Calculus can be used to show that these two equations can be solved simultanuously to get estimates for &lt;code&gt;\(\beta_{0}\)&lt;/code&gt; and &lt;code&gt;\(\beta_{1}\)&lt;/code&gt; that minimize the criterion above. These formulas are:&lt;/p&gt;
&lt;p&gt;$$
b_{1} = \frac{\sum(X - \bar{X})(Y - \bar{Y})}{\sum(X - \bar{X})^2}
$$
$$
b_{0} = \bar{Y} - b_{1}\bar{X}
$$&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s use R to get these quantities.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1 &amp;lt;- with(airquality, 
      sum((avg_wind - mean(avg_wind)) * (daily_aqi - mean(daily_aqi))) / sum((avg_wind - mean(avg_wind))^2)
)
b0 &amp;lt;- with(airquality, 
      mean(daily_aqi) - b1 * mean(avg_wind)
)
b0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 48.22295
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;coef(air_lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##   48.222946   -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;general-approach&#34;&gt;General Approach&lt;/h3&gt;
&lt;p&gt;When there are more than one predictor, the number of equations gets a bit unyieldy, therefore, there is a general analytic approach that works for any set of predictor attributes. The general approach uses matrix algebra (anyone take linear algebra?), to achieve their estimates. This general form is:&lt;/p&gt;
&lt;p&gt;$$
\mathbf{b} = \left( \mathbf{X}^{&lt;code&gt;}\mathbf{X} \right)^{-1} \left( \mathbf{X}^{&lt;/code&gt;} \mathbf{Y} \right).
$$
Where &lt;code&gt;\(\mathbf{b}\)&lt;/code&gt; is a vector of estimated regression coefficients, &lt;code&gt;\(\mathbf{X}\)&lt;/code&gt; is a matrix of covariate/predictor attributes (called the design matrix), and &lt;code&gt;\(\mathbf{Y}\)&lt;/code&gt; is a vector of the outcome attribute.&lt;/p&gt;
&lt;p&gt;Below, I show what these would look like for the air quality example that has been used and solve for the regression coefficients.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;X &amp;lt;- model.matrix(air_lm)
head(X)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   (Intercept) avg_wind
## 1           1 2.941667
## 2           1 2.445833
## 3           1 1.995833
## 4           1 3.445833
## 5           1 1.116667
## 6           1 6.091667
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Y &amp;lt;- as.matrix(airquality$daily_aqi)
head(Y)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1]
## [1,]   57
## [2,]   54
## [3,]   69
## [4,]   56
## [5,]   54
## [6,]   22
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;X_X &amp;lt;- solve(t(X) %*% X)
X_X
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##               (Intercept)      avg_wind
## (Intercept)  0.0008152474 -1.424894e-04
## avg_wind    -0.0001424894  3.340328e-05
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;X_Y &amp;lt;- t(X) %*% Y
X_Y
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##               [,1]
## (Intercept) 186997
## avg_wind    731464
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;X_X %*% X_Y
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                  [,1]
## (Intercept) 48.222946
## avg_wind    -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;coef(air_lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##   48.222946   -2.211798
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Week 3</title>
      <link>https://psqf6243.brandonlebeau.org/content/03-week3/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/03-week3/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This week is an introduction to linear regression. The primary goal of this week is to introduce the model and get familiar with the basic interpretation of parameters.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Define a residual or error from a regression model.&lt;/li&gt;
&lt;li&gt;Explore benefits of centering predictor attributes.&lt;/li&gt;
&lt;li&gt;Engage with linear regression parameter estimation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;activities&#34;&gt;Activities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read Chapter 1 of &lt;a href=&#34;https://dx-doi-org.proxy.lib.uiowa.edu/10.4135/9781483396774.n1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Applied Regression: An Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Engage with &lt;a href=&#34;../../lectures/&#34;&gt;course notes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optional, Read Chapter 7 of &lt;a href=&#34;https://lebebr01.github.io/stat_thinking/linear-regression.html#simple-regression-continuous-predictor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Statistical Reasoning through Computation and R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional, Read 7.2 of &lt;a href=&#34;https://openintro-ims.netlify.app/model-slr.html#least-squares-regression&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Modern Statistics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assignments&#34;&gt;Assignments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Quiz 1 to come soon&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../assignments/actitivy/activity1/&#34;&gt;Activity 1&lt;/a&gt; - Due Around September 19th&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Week 4</title>
      <link>https://psqf6243.brandonlebeau.org/content/04-week4/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/04-week4/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Digging deeper into linear regression. Time will be spent to show/prove via simulation the least square criterion that is minimized by the regression estimates. The foundation for inference using classical statistical methods will be explored.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Understand the least squares minimization for regression.&lt;/li&gt;
&lt;li&gt;Explore inference for regression parameters.&lt;/li&gt;
&lt;li&gt;Define what a standard error is.&lt;/li&gt;
&lt;li&gt;Define null hypothesis significance testing (NHST)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;activities&#34;&gt;Activities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read Chapter 2 of &lt;a href=&#34;https://dx-doi-org.proxy.lib.uiowa.edu/10.4135/9781483396774.n2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Applied Regression: An Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read Chapter 3, section 1 of &lt;a href=&#34;https://web.stanford.edu/~hastie/ISLR2/ISLRv2_website.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Statistical Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Engage with &lt;a href=&#34;../../lectures/&#34;&gt;course notes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optional, Read 24.4 of &lt;a href=&#34;https://openintro-ims.netlify.app/inf-model-slr.html#mathslope&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Modern Statistics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assignments&#34;&gt;Assignments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Quiz 2 &amp;ndash; To come &amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../assignments/activity/activity1/&#34;&gt;Activity 1&lt;/a&gt; &amp;ndash; Due around September 19th&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Least Squares Simulation</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/04-least-squares-simulation/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/04-least-squares-simulation/</guid>
      <description>&lt;h2 id=&#34;example-to-show-least-squares-minimization&#34;&gt;Example to show least squares minimization&lt;/h2&gt;
&lt;p&gt;This little example is meant as a way to show the least square really minimizes the criterion, $ \sum \left( Y - \hat{Y} \right)^2 $.&lt;/p&gt;
&lt;p&gt;In this example, we will generate some data so that we know what the truth is. Then, upon data generation, we will compute a bunch of different values for the linear slope and y-intercept. For each combination of the y-intercept and slope, I will compute the sum of squares error depicted above.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(simglm)

theme_set(theme_bw(base_size = 18))

set.seed(2021)

sim_arguments &amp;lt;- list(
    formula = y ~ x,
    fixed = list(x = list(var_type = &#39;continuous&#39;, mean = 100, sd = 20)),
    error = list(variance = 100),
    sample_size = 1000,
    reg_weights = c(5, .5)
)

sim_data &amp;lt;- simulate_fixed(data = NULL, sim_arguments) %&amp;gt;%
  simulate_error(sim_arguments) %&amp;gt;%
  generate_response(sim_arguments)

head(sim_data)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   X.Intercept.         x level1_id       error fixed_outcome random_effects
## 1            1  97.55080         1   8.0959540      53.77540              0
## 2            1 111.04913         2   0.9941633      60.52457              0
## 3            1 106.97299         3 -23.4302131      58.48650              0
## 4            1 107.19264         4   6.7652598      58.59632              0
## 5            1 117.96107         5 -36.1147374      63.98054              0
## 6            1  61.54861         6  -1.6416799      35.77430              0
##          y
## 1 61.87135
## 2 61.51873
## 3 35.05628
## 4 65.36158
## 5 27.86580
## 6 34.13262
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;ggstance&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: scales
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;scales&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:purrr&#39;:
## 
##     discard
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:readr&#39;:
## 
##     col_factor
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggridges
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## New to ggformula?  Try the tutorials: 
## 	learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
## 	learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(y ~ x, data = sim_data, size = 4) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/04-least-squares-simulation_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sim_lm &amp;lt;- lm (y ~ x, data = sim_data)
coef(sim_lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)           x 
##   5.9653484   0.4941165
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;y_intercept &amp;lt;- seq(0, 15, by = .25)
slope &amp;lt;- seq(0, 1.5, by = .01)

conditions &amp;lt;- rbind(expand.grid(y_intercept = y_intercept, 
                          slope = slope),
                          coef(sim_lm))

tail(conditions)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      y_intercept     slope
## 9207   14.000000 1.5000000
## 9208   14.250000 1.5000000
## 9209   14.500000 1.5000000
## 9210   14.750000 1.5000000
## 9211   15.000000 1.5000000
## 9212    5.965348 0.4941165
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dim(conditions)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 9212    2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gf_point(y ~ x, data = sim_data, size = 4) %&amp;gt;%
  gf_smooth(method = &#39;lm&#39;) %&amp;gt;%
  gf_abline(slope = ~slope, intercept = ~y_intercept, data = slice(conditions, 1), linetype = 2, size = 2) %&amp;gt;%
  gf_abline(slope = ~slope, intercept = ~y_intercept, data = slice(conditions, 855), linetype = 2, color = &#39;lightgreen&#39;, size = 2) %&amp;gt;%
  gf_refine(coord_cartesian(xlim = c(0, 160), ylim = c(0, 120)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/04-least-squares-simulation_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sum_square_error &amp;lt;- function(conditions, sim_data) {
    fitted &amp;lt;- conditions[[&#39;y_intercept&#39;]] + conditions[[&#39;slope&#39;]] * sim_data[[&#39;x&#39;]]

    deviation &amp;lt;- sim_data[[&#39;y&#39;]] - fitted

    sqrt((sum(deviation^2) / (nrow(sim_data) - 2)))
}

sum_square_error(conditions[1892, ], sim_data)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 26.74862
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(sim_lm)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 10.18153
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(future)

plan(multisession)

conditions$sse &amp;lt;- unlist(lapply(1:nrow(conditions), function(xx) sum_square_error(conditions[xx, ], sim_data)))

head(conditions)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   y_intercept slope      sse
## 1        0.00     0 57.37574
## 2        0.25     0 57.13345
## 3        0.50     0 56.89123
## 4        0.75     0 56.64908
## 5        1.00     0 56.40699
## 6        1.25     0 56.16498
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plan(sequential)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Week 5</title>
      <link>https://psqf6243.brandonlebeau.org/content/05-week5/</link>
      <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/05-week5/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Digging deeper into linear regression inference using classical procedures. Further definitions of confidence intervals, sampling distribution, and interpretations of p-values.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Construct a confidence interval&lt;/li&gt;
&lt;li&gt;Define the sampling distribution&lt;/li&gt;
&lt;li&gt;Perform significance testing&lt;/li&gt;
&lt;li&gt;Interpret p-value as a continuous probability&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;activities&#34;&gt;Activities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read Chapter 2 of &lt;a href=&#34;https://dx-doi-org.proxy.lib.uiowa.edu/10.4135/9781483396774.n2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Applied Regression: An Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read Chapter 3, section 1 of &lt;a href=&#34;https://web.stanford.edu/~hastie/ISLR2/ISLRv2_website.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Statistical Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Engage with &lt;a href=&#34;../../lectures/&#34;&gt;course notes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optional, Read 24.4 of &lt;a href=&#34;https://openintro-ims.netlify.app/inf-model-slr.html#mathslope&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Modern Statistics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional, Read &lt;a href=&#34;https://doi.org/10.1080/00031305.2016.1154108&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ASA statement on p-values&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assignments&#34;&gt;Assignments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../assignments/activity/activity1/&#34;&gt;Activity 1&lt;/a&gt; &amp;ndash; Due around September 19th&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../assignments/activity/activity2/&#34;&gt;Activity 2&lt;/a&gt; &amp;ndash; Due around October 3rd&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../assignments/quizzes/quiz2/&#34;&gt;Quiz 2&lt;/a&gt; &amp;ndash; Due September 26th&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Week 6</title>
      <link>https://psqf6243.brandonlebeau.org/content/06-week6/</link>
      <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/content/06-week6/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Regression conditions for valid inferences. Topics will explore evaluation of residuals for checking of conditions.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Define what a residual is&lt;/li&gt;
&lt;li&gt;Define common statistical conditions for linear regression&lt;/li&gt;
&lt;li&gt;Interpret residual plots&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;activities&#34;&gt;Activities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read Chapter 2 of &lt;a href=&#34;https://dx-doi-org.proxy.lib.uiowa.edu/10.4135/9781483396774.n2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Applied Regression: An Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read Chapter 3, section 1 of &lt;a href=&#34;https://web.stanford.edu/~hastie/ISLR2/ISLRv2_website.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Statistical Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Engage with &lt;a href=&#34;../../lectures/&#34;&gt;course notes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assignments&#34;&gt;Assignments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../assignments/activity/activity2/&#34;&gt;Activity 2&lt;/a&gt; &amp;ndash; Due around October 3rd&lt;/li&gt;
&lt;li&gt;Activity 3 &amp;ndash; Coming soon&lt;/li&gt;
&lt;li&gt;Quiz 3 &amp;ndash; Coming soon&lt;/li&gt;
&lt;li&gt;Assignment 1 - coming soon, likely due around October 10th &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Regression Inference</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/05-regression-inference/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/05-regression-inference/</guid>
      <description>&lt;h1 id=&#34;inference-for-regression-parameters&#34;&gt;Inference for regression parameters&lt;/h1&gt;
&lt;p&gt;It is often of interest to perform inference about the regression parameters that we have estimated thus far. The reason inference is useful is based on the idea that for most problems the sample is used to approximate the population. Therefore, a subset of the population (the sample) is used to estimate the population parameters that are of most interest. As such, our estimates come with error and this uncertainty we can quantify when making inference about the parameter estimates.&lt;/p&gt;
&lt;p&gt;In this course, I plan to show you two ways to perform this inference. One of those frameworks will be the classical approach which uses classical statistical theory to estimate the amount of uncertainty in the parameter estimates. The second approach will use the bootstrap as a way to computationally estimate the uncertainty. The benefit of the bootstrap is that it comes with fewer assumptions than the classical approach. We will build up to these arguments.&lt;/p&gt;
&lt;h2 id=&#34;classical-inferential-framework&#34;&gt;Classical Inferential Framework&lt;/h2&gt;
&lt;p&gt;The classical inferential framework, sometimes referred to as the null hypothesis significance test (NHST) has been around for more than 100 years. This framework builds off of the idea of a null hypothesis.&lt;/p&gt;
&lt;p&gt;A null hypothesis is typically thought as a hypothesis that assumes there is no relationship or a null effect. Framing this in the regression concept that we have been working with, we could define the following null hypotheses.&lt;/p&gt;
&lt;p&gt;$$
H_{0}: \beta_{0} = 0.\ The\  population\  yintercept\  equals\  0.
$$&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;$$
H_{0}: \beta_{1} = 0.\ The\  population\  slope\  equals\  0.
$$&lt;/p&gt;
&lt;p&gt;In the following two null hypotheses, represented with &lt;code&gt;\(H_{0}\)&lt;/code&gt;, the population parameters are being assumed to be 0 in the population. This is one definition of a null effect, but is not the only null effect we can define (more on this later). The value defined as a null effect is important as it centers the sampling distribution used for evaluating where the sample estimate falls in that distribution.&lt;/p&gt;
&lt;p&gt;Another hypothesis is typically defined with the null hypothesis, called the alternative hypothesis. This hypothesis states that there is an effect. Within the linear regression framework, we could write the alternative hypotheses as:&lt;/p&gt;
&lt;p&gt;$$
H_{A}: \beta_{0} \neq 0.\ The\  population\  yintercept\  is\  not\  equal\  to\  0.
$$&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;$$
H_{A}: \beta_{1} \neq 0.\ The\  population\  slope\  is\  not\  equal\  to\  0.
$$&lt;/p&gt;
&lt;p&gt;In the following two alternative hypotheses, represented with &lt;code&gt;\(H_{A}\)&lt;/code&gt;, the population parameters are assumed to be not equal to 0. These can also be one-sided, more on this with an example later.&lt;/p&gt;
&lt;h3 id=&#34;estimating-uncertainty-in-parameter-estimates&#34;&gt;Estimating uncertainty in parameter estimates&lt;/h3&gt;
&lt;p&gt;The standard error is used to estimate uncertainty or error in the parameter estimates due to having a sample from the population. More specifically, this means that the entire population is not used to estimate the parameter, therefore the estimate we have is very likely not equal exactly to the parameter. Instead, there is some sort of sampling error involved that we want to quantify. If the sample was collected well, ideally randomly, then the estimate should be unbiased. Unbiased here doesn&amp;rsquo;t mean that the estimate equals the population parameter, rather, that through repeated sampling, the average of our sample estimates would equal the population parameter.&lt;/p&gt;
&lt;p&gt;As mentioned, standard errors are used to quantify this uncertainty. In the linear regression case we have explored so far, there are mathematical formula for the standard errors. These are shown below.&lt;/p&gt;
&lt;p&gt;$$
SE\left( \hat{\beta}_{0} \right)^2 = \sqrt{\hat{\sigma}^2 \left( \frac{1}{n} + \frac{\bar{X}^2}{\sum \left( X - \bar{X} \right)^2} \right)}
$$&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;$$
SE\left( \hat{\beta}_{1} \right)^2 = \sqrt{\frac{\hat{\sigma}^2}{\sum \left( X - \bar{X} \right)^2}}
$$&lt;/p&gt;
&lt;p&gt;In the equation above, &lt;code&gt;\(\hat{\sigma}^2\)&lt;/code&gt;, is equal to &lt;code&gt;\(\sqrt{\frac{SS_{error}}{n - 2}}\)&lt;/code&gt;, and &lt;code&gt;\(n\)&lt;/code&gt; is the sample size (ie, number of rows of data in the model).&lt;/p&gt;
&lt;h4 id=&#34;matrix-representation&#34;&gt;Matrix Representation&lt;/h4&gt;
&lt;p&gt;It is also possible, and more easily extendable, to write the standard error computations or the variance of the estimated parameters in matrix representation. This framework extends beyond the single predictor case (ie. one &lt;code&gt;\(X\)&lt;/code&gt;), therefore is more readily used in practice.&lt;/p&gt;
&lt;p&gt;$$
\hat{var}\left({\hat{\beta}}\right) = \hat{\sigma}^2 \left( \mathbf{X}^{`}\mathbf{X} \right)^{-1}
$$&lt;/p&gt;
&lt;p&gt;In the equation above, &lt;code&gt;\(\hat{\sigma}^2\)&lt;/code&gt;, is equal to &lt;code&gt;\(\sqrt{\frac{SS_{error}}{n - 2}}\)&lt;/code&gt;, and &lt;code&gt;\(\mathbf{X}\)&lt;/code&gt; is the design matrix from the regression analysis. Finally, to get the standard errors back, you take the square root of the diagonal elements.&lt;/p&gt;
&lt;p&gt;$$
SE\left( \hat{\beta} \right) = \sqrt{diag\left(\hat{\sigma}^2 \left( \mathbf{X}^{`}\mathbf{X} \right)^{-1}\right)}&lt;/p&gt;
&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;
&lt;p&gt;The  data for this section of notes will explore data from the &lt;a href=&#34;https://www.epa.gov/outdoor-air-quality-data&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Environmental Protection Agency on Air Quality&lt;/a&gt; collected for the state of Iowa in 2021. The data are daily values for PM 2.5 particulates. The attributes included in the data are shown below with a short description.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Variable&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;date&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Date of observation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Site ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;poc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Parameter Occurrence Code (POC)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pm2.5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Average daily pm 2.5 particulate value, in (ug/m3; micrograms per meter cubed)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;daily_aqi&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Average air quality index&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;site_name&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Site Name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;aqs_parameter_desc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Text Description of Observation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cbsa_code&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Core Based Statistical Area (CBSA) ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cbsa_name&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CBSA Name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;county&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;County in Iowa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;avg_wind&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Average daily wind speed (in knots)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max_wind&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Maximum daily wind speed (in knots)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max_wind_hours&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Time of maximum daily wind speed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;guiding-question&#34;&gt;Guiding Question&lt;/h4&gt;
&lt;p&gt;How is average daily wind speed related to the daily air quality index?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
## 
## Attaching package: &#39;ggstance&#39;
## 
## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
## 
## Loading required package: scales
## 
## Attaching package: &#39;scales&#39;
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     discard
## 
## The following object is masked from &#39;package:readr&#39;:
## 
##     col_factor
## 
## Loading required package: ggridges
## 
## New to ggformula?  Try the tutorials: 
## 	learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
## 	learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(mosaic)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &#39;mosaic&#39;:
##   method                           from   
##   fortify.SpatialPolygonsDataFrame ggplot2
## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Attaching package: &#39;mosaic&#39;
## 
## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
## 
## The following object is masked from &#39;package:scales&#39;:
## 
##     rescale
## 
## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     cross
## 
## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
## 
## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,
##     quantile, sd, t.test, var
## 
## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;theme_set(theme_bw(base_size = 18))

airquality &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/iowa_air_quality_2021.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 6917 Columns: 10
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr (5): date, site_name, aqs_parameter_desc, cbsa_name, county
## dbl (5): id, poc, pm2.5, daily_aqi, cbsa_code
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;wind &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/daily_WIND_2021-iowa.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 1537 Columns: 5
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: &amp;quot;,&amp;quot;
## chr (2): date, cbsa_name
## dbl (3): avg_wind, max_wind, max_wind_hours
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;airquality &amp;lt;- airquality %&amp;gt;%
   left_join(wind, by = c(&#39;cbsa_name&#39;, &#39;date&#39;)) %&amp;gt;% 
   drop_na()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;air_lm &amp;lt;- lm(daily_aqi ~ avg_wind, data = airquality)
coef(air_lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##   48.222946   -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm)$r.square
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.08528019
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm)$sigma
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 18.05479
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sum_x &amp;lt;- airquality %&amp;gt;%
    summarise(mean_wind = mean(avg_wind),
              sum_dev_x_sq = sum( (avg_wind - mean_wind) ^ 2))
sum_x
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 × 2
##   mean_wind sum_dev_x_sq
##       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;
## 1      4.27       29937.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;se_b0 &amp;lt;- sqrt(summary(air_lm)$sigma^2 * ((1 / nrow(airquality)) + ( sum_x[[&#39;mean_wind&#39;]]^2 / sum_x[[&#39;sum_dev_x_sq&#39;]]) ))
se_b1 &amp;lt;- sqrt(summary(air_lm)$sigma^2 / sum_x[[&#39;sum_dev_x_sq&#39;]])

se_b0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.51551
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;se_b1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.1043487
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;X &amp;lt;- model.matrix(air_lm)

var_b &amp;lt;- summary(air_lm)$sigma^2 * solve(t(X) %*% X)
var_b 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             (Intercept)    avg_wind
## (Intercept)  0.26575054 -0.04644803
## avg_wind    -0.04644803  0.01088865
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sqrt(diag(var_b))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##   0.5155100   0.1043487
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm)$coefficients[,2]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##   0.5155100   0.1043487
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;moving-toward-inference&#34;&gt;Moving toward inference&lt;/h3&gt;
&lt;p&gt;Now that there the parameters are estimated and the amount of uncertainty is quantified, inference is possible. There are two related pieces that can be computed now, a confidence interval and/or the test-statistic and p-value. Let&amp;rsquo;s go through both.&lt;/p&gt;
&lt;p&gt;First, a confidence interval can be computed. Confidence intervals take the following general form:&lt;/p&gt;
&lt;p&gt;$$
\hat{\beta} \pm C * SE
$$&lt;/p&gt;
&lt;p&gt;Where, &lt;code&gt;\(\hat{\beta}\)&lt;/code&gt; is the parameter estimate, &lt;code&gt;\(C\)&lt;/code&gt; is the confidence level, and &lt;code&gt;\(SE\)&lt;/code&gt; is the standard error. The parameter estimates and standard errors are what we have already established, the &lt;code&gt;\(C\)&lt;/code&gt; is the confidence level. This indicates the percentage of times, over the long run/repeated sampling, that the interval will capture the population parameter. Historically, this value is often specified as 95%, but any value is theoretically possible.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;\(C\)&lt;/code&gt; value represents a quantile from a mathematical distribution that separates the middle percetage desired (ie, 95%) from the rest of the distribution. The mathematical distribution is most often the t-distribution, but the difference between a t-distribution and normal distribution are modest once the sample size is greater than 30 or so.&lt;/p&gt;
&lt;p&gt;The figure below tries to highlight the &lt;code&gt;\(C\)&lt;/code&gt; value.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;t_30 &amp;lt;- data.frame(value = seq(-5, 5, .01), density = dt(seq(-5, 5, .01), df = 30))
gf_line(density ~ value, data = t_30) %&amp;gt;%
  gf_vline(xintercept = ~ qt(.025, df = 30), linetype = 2) %&amp;gt;%
  gf_vline(xintercept = ~ qt(.975, df = 30), linetype = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/05-regression-inference_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;coef(air_lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##   48.222946   -2.211798
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm)$coefficients[,2]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)    avg_wind 
##   0.5155100   0.1043487
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;abs(qt(.025, df = nrow(airquality) -2))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.960456
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;48.2 + c(-1, 1) * 1.96 * .5155
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 47.18962 49.21038
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;-2.211 + c(-1, 1) * 1.96 * .1043
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -2.415428 -2.006572
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;inference-with-test-statistics&#34;&gt;Inference with test statistics&lt;/h3&gt;
&lt;p&gt;It is also possible to do inference with a test statistic and computation of a p-value. Inference in this framework can be summarized into the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generate hypotheses, ie null and alternative hypotheses.&lt;/li&gt;
&lt;li&gt;Establish an &lt;code&gt;\(\alpha\)&lt;/code&gt; value&lt;/li&gt;
&lt;li&gt;Estimate parameters&lt;/li&gt;
&lt;li&gt;Compute test statistic&lt;/li&gt;
&lt;li&gt;Generate p-value&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;An &lt;code&gt;\(\alpha\)&lt;/code&gt; value is the level of significance and represents the probability of obtaining the results due to chance. This is a value that the researcher can select. For a 5% &lt;code&gt;\(\alpha\)&lt;/code&gt; value, this is what was used above to compute the confidence intervals.&lt;/p&gt;
&lt;p&gt;The test statistic is computed as follows:&lt;/p&gt;
&lt;p&gt;$$
test\ stat = \frac{\hat{\beta} - hypothesized\ value}{SE(\hat{\beta})}
$$&lt;/p&gt;
&lt;p&gt;where &lt;code&gt;\(\hat{\beta}\)&lt;/code&gt; is the estimated parameter, &lt;code&gt;\(SE(\hat{\beta})\)&lt;/code&gt; is the standard error of the parameter estimate, and the &lt;code&gt;\(hypothesized\ value\)&lt;/code&gt; is the hypothesized value from the null hypothesis. This is often 0, but does not need to be zero.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s assume the following null/alternative hypotheses:&lt;/p&gt;
&lt;p&gt;$$
H_{0}: \beta_{1} = 0  \&lt;br&gt;
H_{A}: \beta_{1} \neq 0
$$&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s use R to compute this test statistic.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;t = (-2.211 - 0) / .1043
t
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -21.19847
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pt(-21.198, df = nrow(airquality) -2, lower.tail = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.003866e-95
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;t_dist &amp;lt;- data.frame(value = seq(-25, 25, .05), density = dt(seq(-25, 25, .05), df = (nrow(airquality) - 2)))
gf_line(density ~ value, data = t_dist) %&amp;gt;%
  gf_vline(xintercept = ~ qt(.025, df = (nrow(airquality) - 2)), linetype = 2) %&amp;gt;%
  gf_vline(xintercept = ~ qt(.975, df = (nrow(airquality) - 2)), linetype = 2) %&amp;gt;%
  gf_vline(xintercept = ~ -21.198, color = &#39;red&#39;) %&amp;gt;%
  gf_vline(xintercept = ~ 21.198, color = &#39;red&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/05-regression-inference_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(air_lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = daily_aqi ~ avg_wind, data = airquality)
## 
## Residuals:
##    Min     1Q Median     3Q    Max 
## -41.71 -14.38  -0.73  12.43  86.84 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  48.2229     0.5155   93.54   &amp;lt;2e-16 ***
## avg_wind     -2.2118     0.1043  -21.20   &amp;lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## Residual standard error: 18.05 on 4819 degrees of freedom
## Multiple R-squared:  0.08528,	Adjusted R-squared:  0.08509 
## F-statistic: 449.3 on 1 and 4819 DF,  p-value: &amp;lt; 2.2e-16
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>t-distribution vs Normal distribution</title>
      <link>https://psqf6243.brandonlebeau.org/lectures/06-t-vs-norm/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/lectures/06-t-vs-norm/</guid>
      <description>&lt;h1 id=&#34;comparing-t-distribution-with-normal-distribution&#34;&gt;Comparing t-distribution with normal distribution&lt;/h1&gt;
&lt;p&gt;This short set of notes will show some differences in the t-distribution with varying degrees of freedom with a normal distribution. This&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- c(2, 10, 15, 20, 30, 50, 100, 1000)

t_dist &amp;lt;- do.call(&#39;rbind&#39;, lapply(seq_along(df), function(xx) data.frame(value = seq(-5, 5, .01), density = dt(seq(-5, 5, .01), df = df[xx]), df = df[xx], normal = FALSE)))

z_dist &amp;lt;- data.frame(value = seq(-5, 5, .01), density = dnorm(seq(-5, 5, .01)), normal = TRUE, df = 0)

dist &amp;lt;- rbind(t_dist, z_dist)

head(dist)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   value     density df normal
## 1 -5.00 0.007127781  2  FALSE
## 2 -4.99 0.007167524  2  FALSE
## 3 -4.98 0.007207557  2  FALSE
## 4 -4.97 0.007247883  2  FALSE
## 5 -4.96 0.007288503  2  FALSE
## 6 -4.95 0.007329422  2  FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6      ✔ purrr   0.3.4 
## ✔ tibble  3.1.8      ✔ dplyr   1.0.10
## ✔ tidyr   1.2.1      ✔ stringr 1.4.1 
## ✔ readr   2.1.2      ✔ forcats 0.5.2 
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggformula)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
## 
## Attaching package: &#39;ggstance&#39;
## 
## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
## 
## Loading required package: scales
## 
## Attaching package: &#39;scales&#39;
## 
## The following object is masked from &#39;package:purrr&#39;:
## 
##     discard
## 
## The following object is masked from &#39;package:readr&#39;:
## 
##     col_factor
## 
## Loading required package: ggridges
## 
## New to ggformula?  Try the tutorials: 
## 	learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
## 	learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(patchwork)

theme_set(theme_bw(base_size = 18))

dist %&amp;gt;%
filter(df %in% c(0, 2)) %&amp;gt;%
gf_point(density ~ value, color = ~ normal, size = 1) %&amp;gt;%
  gf_refine(theme(legend.position = &#39;none&#39;)) /
dist %&amp;gt;%
filter(df %in% c(0, 10)) %&amp;gt;%
gf_point(density ~ value, color = ~ normal, size = 1) %&amp;gt;%
  gf_refine(theme(legend.position = &#39;none&#39;)) / 
  dist %&amp;gt;%
filter(df %in% c(0, 100)) %&amp;gt;%
gf_point(density ~ value, color = ~ normal, size = 1) %&amp;gt;%
  gf_refine(theme(legend.position = &#39;none&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://psqf6243.brandonlebeau.org/lectures/06-t-vs-norm_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quiz 1</title>
      <link>https://psqf6243.brandonlebeau.org/assignments/quizzes/quiz1/</link>
      <pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/assignments/quizzes/quiz1/</guid>
      <description>&lt;p&gt;Quiz 1 can be taken on ICON, due September 19th, 2022. The quiz covers content from &lt;a href=&#34;https://psqf6243.brandonlebeau.org/content/01-week1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Week 1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://uiowa.instructure.com/courses/196816/quizzes/336653&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quiz 1 Link&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quiz 2</title>
      <link>https://psqf6243.brandonlebeau.org/assignments/quizzes/quiz2/</link>
      <pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/assignments/quizzes/quiz2/</guid>
      <description>&lt;p&gt;Quiz 2 can be taken on ICON, due September 26th, 2022. The quiz covers content from &lt;a href=&#34;https://psqf6243.brandonlebeau.org/content/02-week2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Week 2&lt;/a&gt; or &lt;a href=&#34;https://psqf6243.brandonlebeau.org/lectures/02-linear-regression/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;section 2 of the notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://uiowa.instructure.com/courses/196816/quizzes/336652&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quiz 2 Link&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Activity 1</title>
      <link>https://psqf6243.brandonlebeau.org/assignments/activity/activity1/</link>
      <pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/assignments/activity/activity1/</guid>
      <description>&lt;p&gt;The following activity is aimed to give you some practice with exploring data on your own using statistical software. You are welcome to use any statistical software you wish and you are also free to work in groups of up to 3 for this assignment. If you work in groups, please submit one completed activity per group on ICON. &lt;em&gt;Please make sure to add everyone&amp;rsquo;s name to the submission&lt;/em&gt;, this can be a comment on ICON or on the document itself.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What to turn in?&lt;/em&gt; Please turn in a document that contains answers to the following questions and also please include any relevant statistics/figures that support your answer. Upload the final document to &lt;a href=&#34;https://uiowa.instructure.com/courses/196816/assignments/1745907&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ICON&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Due around&lt;/em&gt; &lt;strong&gt;September 19th, 2021&lt;/strong&gt;. No penalty for late submissions as long as it is submitted by December 11th.&lt;/p&gt;
&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;
&lt;p&gt;The data for this activity comes from the &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tidy Tuesday&lt;/a&gt; project. The data contain 73 rows and 22 columns about ferris wheels from around the world. A data description for each column in the data is shown below (&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-08-09&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;see the Tidy Tuesday page for more information&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The data can be obtained in &lt;a href=&#34;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/ferris_wheels.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;csv format&lt;/a&gt;. A short description for each attribute is as follows. These data are also found within the &amp;ldquo;data&amp;rdquo; folder inside the IDAS.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Attribute Name&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Type&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;name&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;height&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Height in feet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;diameter&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Diameter in feet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;opened&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ISO Date opened&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;closed&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ISO date closed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;country&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Country&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;location&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Location/city/region&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;number_of_cabins&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;integer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Number of cabins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;passengers_per_cabin&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;integer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Passengers per cabin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;seating_capacity&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;integer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Seating capacity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;hourly_capacity&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;integer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Hourly capacity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ride_duration_minutes&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Ride duration minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;climate_controlled&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;climate_controlled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;construction_cost&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;construction_cost&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;status&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;status&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;design_manufacturer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;design_manufacturer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;vip_area&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;vip_area&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ticket_cost_to_ride&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ticket_cost_to_ride&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;official_website&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;character&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;official_website&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;turns&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;turns&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;questions&#34;&gt;Questions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Pick a single integer or double attribute from the table above and explore the distribution of that attribute. In a few sentences, summarize key elements of the distribution, for instance discussing elements related to &lt;strong&gt;shape&lt;/strong&gt;, &lt;strong&gt;center&lt;/strong&gt;, &lt;strong&gt;variation&lt;/strong&gt;, and/or &lt;strong&gt;extreme values&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pick a few attributes (i.e., pick your top 3 favorite) that are of the double or integer type and explore the bivariate association between those attributes. That is, estimate what is the bivariate association between the attributes you chose. In a few sentences, summarize key elements of the associations, paying attention to the &lt;strong&gt;strength&lt;/strong&gt; and &lt;strong&gt;direction&lt;/strong&gt; of association.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explore the bivariate associations you picked in #2 visually. Does the relationship appear to be linear for the associations that you picked? Why or why not?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pick a single integer or double attribute from the table above. Compute descriptive statistics for this attribute using one of the following attributes as a grouping attribute:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;climate_controlled&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;type_two&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;More specifically, compute descriptive statistics for the integer or double outcome for each unique value of either &lt;code&gt;climate_controlled&lt;/code&gt; or &lt;code&gt;type_two&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Summarize, in a few sentences, any notable differences or similarities in the descriptive statistics computed in #4 across the groups?&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Activity 2</title>
      <link>https://psqf6243.brandonlebeau.org/assignments/activity/activity2/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://psqf6243.brandonlebeau.org/assignments/activity/activity2/</guid>
      <description>&lt;p&gt;The following activity is aimed to give you some practice with exploring data and running a linear regression on your own using statistical software. You are welcome to use any statistical software you wish and you are also free to work in groups of up to 3 for this assignment. If you work in groups, please submit one completed activity per group on ICON. &lt;em&gt;Please make sure to add everyone&amp;rsquo;s name to the submission&lt;/em&gt;, this can be a comment on ICON or on the document itself.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What to turn in?&lt;/em&gt; Please turn in a document that contains answers to the following questions and also please include any relevant statistics/figures that support your answer. Upload the final document to &lt;a href=&#34;https://uiowa.instructure.com/courses/196816/assignments/1745908&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ICON&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Due around&lt;/em&gt; &lt;strong&gt;October 3rd, 2022&lt;/strong&gt;. No penalty for late submissions as long as it is submitted by December 11th.&lt;/p&gt;
&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;
&lt;p&gt;The data for this activity is rideshare data from about three weeks in 2018 for Boston, MA. The data originally come from &lt;a href=&#34;https://www.kaggle.com/brllrb/uber-and-lyft-dataset-boston-ma&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kaggle&lt;/a&gt;. I have done some processing to randomly select 2,500 records from the larger data for our use and have trimmed down the data attributes.&lt;/p&gt;
&lt;p&gt;The data can be obtained in &lt;a href=&#34;https://raw.githubusercontent.com/lebebr01/psqf_6243/main/data/rideshare_small.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;csv format&lt;/a&gt;. A short description for each attribute is as follows.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Attribute Name&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Unique identifier for each row&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;hour&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The hour of the ride&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;day&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The day of the ride&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;month&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The month of the ride, either 11 = November or 12 = December&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;price&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The total price of the ride, in $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;temperature&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The outside temperature at the time of the ride, in Fahrenheit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;distance&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Total distance of the ride, in miles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;surge_multiplier&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The surge multiplier for the cost of rides&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;humidity&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The humidity at the time of the ride&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;guiding-question&#34;&gt;Guiding Question&lt;/h2&gt;
&lt;p&gt;Does the distance of the ride explain variation in the price of the ride?&lt;/p&gt;
&lt;h2 id=&#34;questions&#34;&gt;Questions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Explore the distribution of the price of the rides descriptively. In a few sentences, summarize key elements of the distribution, for instance discussing elements related to &lt;strong&gt;shape&lt;/strong&gt;, &lt;strong&gt;center&lt;/strong&gt;, &lt;strong&gt;variation&lt;/strong&gt;, and/or &lt;strong&gt;extreme values&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explore the bivariate distribution of the price of ride and distance of rides. In a few sentences, summarize key elements of the relationship between price and distance. You may wish to include the following elements of the association, &lt;strong&gt;strength&lt;/strong&gt;, &lt;strong&gt;direction&lt;/strong&gt;, and/or &lt;strong&gt;form&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Does the association between price and distance of rides appear to be linear? Why or why not?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fit a linear regression to answer the research question highlighted above. Interpret the intercept and slope of the linear regression. That is, what do these terms mean?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What are the r-squared and sigma estimates from the linear regression? Interpret these two values in the context of the problem. That is, what do these two terms mean in the context of the data and this problem?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, in a couple sentences, provide a summary of the overall model. Does the model appear to be useful to predict the price of a ride with only the distance of the ride? &lt;em&gt;Use statistics from the analysis steps above to support your answer.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
